// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: TimeLine.proto
// Protobuf Java Version: 4.30.0

package fish;

public final class TimeLine {
  private TimeLine() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 0,
      /* suffix= */ "",
      TimeLine.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TimelineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.Timeline)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Serial number for the timeline
     * </pre>
     *
     * <code>uint32 serial = 1;</code>
     * @return The serial.
     */
    int getSerial();

    /**
     * <pre>
     * Current time in the timeline
     * </pre>
     *
     * <code>uint32 time = 2;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <pre>
     * Pause duration
     * </pre>
     *
     * <code>uint32 pause = 3;</code>
     * @return The pause.
     */
    int getPause();

    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    java.util.List<fish.TimeLine.Group> 
        getGroupList();
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    fish.TimeLine.Group getGroup(int index);
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    int getGroupCount();
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    java.util.List<? extends fish.TimeLine.GroupOrBuilder> 
        getGroupOrBuilderList();
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    fish.TimeLine.GroupOrBuilder getGroupOrBuilder(
        int index);

    /**
     * <pre>
     * List of dead fish IDs
     * </pre>
     *
     * <code>repeated uint32 dead = 5;</code>
     * @return A list containing the dead.
     */
    java.util.List<java.lang.Integer> getDeadList();
    /**
     * <pre>
     * List of dead fish IDs
     * </pre>
     *
     * <code>repeated uint32 dead = 5;</code>
     * @return The count of dead.
     */
    int getDeadCount();
    /**
     * <pre>
     * List of dead fish IDs
     * </pre>
     *
     * <code>repeated uint32 dead = 5;</code>
     * @param index The index of the element to return.
     * @return The dead at the given index.
     */
    int getDead(int index);
  }
  /**
   * <pre>
   * Timeline message for fish spawning and management
   * </pre>
   *
   * Protobuf type {@code fish.Timeline}
   */
  public static final class Timeline extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.Timeline)
      TimelineOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        Timeline.class.getName());
    }
    // Use Timeline.newBuilder() to construct.
    private Timeline(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Timeline() {
      group_ = java.util.Collections.emptyList();
      dead_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.TimeLine.internal_static_fish_Timeline_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.TimeLine.internal_static_fish_Timeline_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.TimeLine.Timeline.class, fish.TimeLine.Timeline.Builder.class);
    }

    public static final int SERIAL_FIELD_NUMBER = 1;
    private int serial_ = 0;
    /**
     * <pre>
     * Serial number for the timeline
     * </pre>
     *
     * <code>uint32 serial = 1;</code>
     * @return The serial.
     */
    @java.lang.Override
    public int getSerial() {
      return serial_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_ = 0;
    /**
     * <pre>
     * Current time in the timeline
     * </pre>
     *
     * <code>uint32 time = 2;</code>
     * @return The time.
     */
    @java.lang.Override
    public int getTime() {
      return time_;
    }

    public static final int PAUSE_FIELD_NUMBER = 3;
    private int pause_ = 0;
    /**
     * <pre>
     * Pause duration
     * </pre>
     *
     * <code>uint32 pause = 3;</code>
     * @return The pause.
     */
    @java.lang.Override
    public int getPause() {
      return pause_;
    }

    public static final int GROUP_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<fish.TimeLine.Group> group_;
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    @java.lang.Override
    public java.util.List<fish.TimeLine.Group> getGroupList() {
      return group_;
    }
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.TimeLine.GroupOrBuilder> 
        getGroupOrBuilderList() {
      return group_;
    }
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    @java.lang.Override
    public int getGroupCount() {
      return group_.size();
    }
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    @java.lang.Override
    public fish.TimeLine.Group getGroup(int index) {
      return group_.get(index);
    }
    /**
     * <pre>
     * Groups of fish to spawn
     * </pre>
     *
     * <code>repeated .fish.Group group = 4;</code>
     */
    @java.lang.Override
    public fish.TimeLine.GroupOrBuilder getGroupOrBuilder(
        int index) {
      return group_.get(index);
    }

    public static final int DEAD_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList dead_ =
        emptyIntList();
    /**
     * <pre>
     * List of dead fish IDs
     * </pre>
     *
     * <code>repeated uint32 dead = 5;</code>
     * @return A list containing the dead.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDeadList() {
      return dead_;
    }
    /**
     * <pre>
     * List of dead fish IDs
     * </pre>
     *
     * <code>repeated uint32 dead = 5;</code>
     * @return The count of dead.
     */
    public int getDeadCount() {
      return dead_.size();
    }
    /**
     * <pre>
     * List of dead fish IDs
     * </pre>
     *
     * <code>repeated uint32 dead = 5;</code>
     * @param index The index of the element to return.
     * @return The dead at the given index.
     */
    public int getDead(int index) {
      return dead_.getInt(index);
    }
    private int deadMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (serial_ != 0) {
        output.writeUInt32(1, serial_);
      }
      if (time_ != 0) {
        output.writeUInt32(2, time_);
      }
      if (pause_ != 0) {
        output.writeUInt32(3, pause_);
      }
      for (int i = 0; i < group_.size(); i++) {
        output.writeMessage(4, group_.get(i));
      }
      if (getDeadList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(deadMemoizedSerializedSize);
      }
      for (int i = 0; i < dead_.size(); i++) {
        output.writeUInt32NoTag(dead_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serial_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, serial_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, time_);
      }
      if (pause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, pause_);
      }
      for (int i = 0; i < group_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, group_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dead_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dead_.getInt(i));
        }
        size += dataSize;
        if (!getDeadList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        deadMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.TimeLine.Timeline)) {
        return super.equals(obj);
      }
      fish.TimeLine.Timeline other = (fish.TimeLine.Timeline) obj;

      if (getSerial()
          != other.getSerial()) return false;
      if (getTime()
          != other.getTime()) return false;
      if (getPause()
          != other.getPause()) return false;
      if (!getGroupList()
          .equals(other.getGroupList())) return false;
      if (!getDeadList()
          .equals(other.getDeadList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERIAL_FIELD_NUMBER;
      hash = (53 * hash) + getSerial();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + PAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getPause();
      if (getGroupCount() > 0) {
        hash = (37 * hash) + GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getGroupList().hashCode();
      }
      if (getDeadCount() > 0) {
        hash = (37 * hash) + DEAD_FIELD_NUMBER;
        hash = (53 * hash) + getDeadList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.TimeLine.Timeline parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.TimeLine.Timeline parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.TimeLine.Timeline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.TimeLine.Timeline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.TimeLine.Timeline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.TimeLine.Timeline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.TimeLine.Timeline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.TimeLine.Timeline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.TimeLine.Timeline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.TimeLine.Timeline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.TimeLine.Timeline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.TimeLine.Timeline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.TimeLine.Timeline prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Timeline message for fish spawning and management
     * </pre>
     *
     * Protobuf type {@code fish.Timeline}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.Timeline)
        fish.TimeLine.TimelineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.TimeLine.internal_static_fish_Timeline_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.TimeLine.internal_static_fish_Timeline_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.TimeLine.Timeline.class, fish.TimeLine.Timeline.Builder.class);
      }

      // Construct using fish.TimeLine.Timeline.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        serial_ = 0;
        time_ = 0;
        pause_ = 0;
        if (groupBuilder_ == null) {
          group_ = java.util.Collections.emptyList();
        } else {
          group_ = null;
          groupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        dead_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.TimeLine.internal_static_fish_Timeline_descriptor;
      }

      @java.lang.Override
      public fish.TimeLine.Timeline getDefaultInstanceForType() {
        return fish.TimeLine.Timeline.getDefaultInstance();
      }

      @java.lang.Override
      public fish.TimeLine.Timeline build() {
        fish.TimeLine.Timeline result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.TimeLine.Timeline buildPartial() {
        fish.TimeLine.Timeline result = new fish.TimeLine.Timeline(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(fish.TimeLine.Timeline result) {
        if (groupBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            group_ = java.util.Collections.unmodifiableList(group_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.group_ = group_;
        } else {
          result.group_ = groupBuilder_.build();
        }
      }

      private void buildPartial0(fish.TimeLine.Timeline result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.serial_ = serial_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.time_ = time_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.pause_ = pause_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          dead_.makeImmutable();
          result.dead_ = dead_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.TimeLine.Timeline) {
          return mergeFrom((fish.TimeLine.Timeline)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.TimeLine.Timeline other) {
        if (other == fish.TimeLine.Timeline.getDefaultInstance()) return this;
        if (other.getSerial() != 0) {
          setSerial(other.getSerial());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getPause() != 0) {
          setPause(other.getPause());
        }
        if (groupBuilder_ == null) {
          if (!other.group_.isEmpty()) {
            if (group_.isEmpty()) {
              group_ = other.group_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGroupIsMutable();
              group_.addAll(other.group_);
            }
            onChanged();
          }
        } else {
          if (!other.group_.isEmpty()) {
            if (groupBuilder_.isEmpty()) {
              groupBuilder_.dispose();
              groupBuilder_ = null;
              group_ = other.group_;
              bitField0_ = (bitField0_ & ~0x00000008);
              groupBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetGroupFieldBuilder() : null;
            } else {
              groupBuilder_.addAllMessages(other.group_);
            }
          }
        }
        if (!other.dead_.isEmpty()) {
          if (dead_.isEmpty()) {
            dead_ = other.dead_;
            dead_.makeImmutable();
            bitField0_ |= 0x00000010;
          } else {
            ensureDeadIsMutable();
            dead_.addAll(other.dead_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                serial_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                time_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                pause_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                fish.TimeLine.Group m =
                    input.readMessage(
                        fish.TimeLine.Group.parser(),
                        extensionRegistry);
                if (groupBuilder_ == null) {
                  ensureGroupIsMutable();
                  group_.add(m);
                } else {
                  groupBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 40: {
                int v = input.readUInt32();
                ensureDeadIsMutable();
                dead_.addInt(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDeadIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  dead_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int serial_ ;
      /**
       * <pre>
       * Serial number for the timeline
       * </pre>
       *
       * <code>uint32 serial = 1;</code>
       * @return The serial.
       */
      @java.lang.Override
      public int getSerial() {
        return serial_;
      }
      /**
       * <pre>
       * Serial number for the timeline
       * </pre>
       *
       * <code>uint32 serial = 1;</code>
       * @param value The serial to set.
       * @return This builder for chaining.
       */
      public Builder setSerial(int value) {

        serial_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Serial number for the timeline
       * </pre>
       *
       * <code>uint32 serial = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSerial() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serial_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       * Current time in the timeline
       * </pre>
       *
       * <code>uint32 time = 2;</code>
       * @return The time.
       */
      @java.lang.Override
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Current time in the timeline
       * </pre>
       *
       * <code>uint32 time = 2;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {

        time_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Current time in the timeline
       * </pre>
       *
       * <code>uint32 time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      private int pause_ ;
      /**
       * <pre>
       * Pause duration
       * </pre>
       *
       * <code>uint32 pause = 3;</code>
       * @return The pause.
       */
      @java.lang.Override
      public int getPause() {
        return pause_;
      }
      /**
       * <pre>
       * Pause duration
       * </pre>
       *
       * <code>uint32 pause = 3;</code>
       * @param value The pause to set.
       * @return This builder for chaining.
       */
      public Builder setPause(int value) {

        pause_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pause duration
       * </pre>
       *
       * <code>uint32 pause = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPause() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pause_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<fish.TimeLine.Group> group_ =
        java.util.Collections.emptyList();
      private void ensureGroupIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          group_ = new java.util.ArrayList<fish.TimeLine.Group>(group_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.TimeLine.Group, fish.TimeLine.Group.Builder, fish.TimeLine.GroupOrBuilder> groupBuilder_;

      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public java.util.List<fish.TimeLine.Group> getGroupList() {
        if (groupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(group_);
        } else {
          return groupBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public int getGroupCount() {
        if (groupBuilder_ == null) {
          return group_.size();
        } else {
          return groupBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public fish.TimeLine.Group getGroup(int index) {
        if (groupBuilder_ == null) {
          return group_.get(index);
        } else {
          return groupBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder setGroup(
          int index, fish.TimeLine.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.set(index, value);
          onChanged();
        } else {
          groupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder setGroup(
          int index, fish.TimeLine.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.set(index, builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder addGroup(fish.TimeLine.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.add(value);
          onChanged();
        } else {
          groupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder addGroup(
          int index, fish.TimeLine.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.add(index, value);
          onChanged();
        } else {
          groupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder addGroup(
          fish.TimeLine.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.add(builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder addGroup(
          int index, fish.TimeLine.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.add(index, builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder addAllGroup(
          java.lang.Iterable<? extends fish.TimeLine.Group> values) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, group_);
          onChanged();
        } else {
          groupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          group_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          groupBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public Builder removeGroup(int index) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.remove(index);
          onChanged();
        } else {
          groupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public fish.TimeLine.Group.Builder getGroupBuilder(
          int index) {
        return internalGetGroupFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public fish.TimeLine.GroupOrBuilder getGroupOrBuilder(
          int index) {
        if (groupBuilder_ == null) {
          return group_.get(index);  } else {
          return groupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public java.util.List<? extends fish.TimeLine.GroupOrBuilder> 
           getGroupOrBuilderList() {
        if (groupBuilder_ != null) {
          return groupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(group_);
        }
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public fish.TimeLine.Group.Builder addGroupBuilder() {
        return internalGetGroupFieldBuilder().addBuilder(
            fish.TimeLine.Group.getDefaultInstance());
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public fish.TimeLine.Group.Builder addGroupBuilder(
          int index) {
        return internalGetGroupFieldBuilder().addBuilder(
            index, fish.TimeLine.Group.getDefaultInstance());
      }
      /**
       * <pre>
       * Groups of fish to spawn
       * </pre>
       *
       * <code>repeated .fish.Group group = 4;</code>
       */
      public java.util.List<fish.TimeLine.Group.Builder> 
           getGroupBuilderList() {
        return internalGetGroupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.TimeLine.Group, fish.TimeLine.Group.Builder, fish.TimeLine.GroupOrBuilder> 
          internalGetGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          groupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.TimeLine.Group, fish.TimeLine.Group.Builder, fish.TimeLine.GroupOrBuilder>(
                  group_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          group_ = null;
        }
        return groupBuilder_;
      }

      private com.google.protobuf.Internal.IntList dead_ = emptyIntList();
      private void ensureDeadIsMutable() {
        if (!dead_.isModifiable()) {
          dead_ = makeMutableCopy(dead_);
        }
        bitField0_ |= 0x00000010;
      }
      /**
       * <pre>
       * List of dead fish IDs
       * </pre>
       *
       * <code>repeated uint32 dead = 5;</code>
       * @return A list containing the dead.
       */
      public java.util.List<java.lang.Integer>
          getDeadList() {
        dead_.makeImmutable();
        return dead_;
      }
      /**
       * <pre>
       * List of dead fish IDs
       * </pre>
       *
       * <code>repeated uint32 dead = 5;</code>
       * @return The count of dead.
       */
      public int getDeadCount() {
        return dead_.size();
      }
      /**
       * <pre>
       * List of dead fish IDs
       * </pre>
       *
       * <code>repeated uint32 dead = 5;</code>
       * @param index The index of the element to return.
       * @return The dead at the given index.
       */
      public int getDead(int index) {
        return dead_.getInt(index);
      }
      /**
       * <pre>
       * List of dead fish IDs
       * </pre>
       *
       * <code>repeated uint32 dead = 5;</code>
       * @param index The index to set the value at.
       * @param value The dead to set.
       * @return This builder for chaining.
       */
      public Builder setDead(
          int index, int value) {

        ensureDeadIsMutable();
        dead_.setInt(index, value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of dead fish IDs
       * </pre>
       *
       * <code>repeated uint32 dead = 5;</code>
       * @param value The dead to add.
       * @return This builder for chaining.
       */
      public Builder addDead(int value) {

        ensureDeadIsMutable();
        dead_.addInt(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of dead fish IDs
       * </pre>
       *
       * <code>repeated uint32 dead = 5;</code>
       * @param values The dead to add.
       * @return This builder for chaining.
       */
      public Builder addAllDead(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDeadIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dead_);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of dead fish IDs
       * </pre>
       *
       * <code>repeated uint32 dead = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDead() {
        dead_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.Timeline)
    }

    // @@protoc_insertion_point(class_scope:fish.Timeline)
    private static final fish.TimeLine.Timeline DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.TimeLine.Timeline();
    }

    public static fish.TimeLine.Timeline getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Timeline>
        PARSER = new com.google.protobuf.AbstractParser<Timeline>() {
      @java.lang.Override
      public Timeline parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Timeline> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Timeline> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.TimeLine.Timeline getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.Group)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Time when this group should spawn
     * </pre>
     *
     * <code>float time = 1;</code>
     * @return The time.
     */
    float getTime();

    /**
     * <pre>
     * Group identifier
     * </pre>
     *
     * <code>uint32 group = 2;</code>
     * @return The group.
     */
    int getGroup();
  }
  /**
   * <pre>
   * Group message representing a fish group to spawn
   * </pre>
   *
   * Protobuf type {@code fish.Group}
   */
  public static final class Group extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.Group)
      GroupOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        Group.class.getName());
    }
    // Use Group.newBuilder() to construct.
    private Group(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Group() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.TimeLine.internal_static_fish_Group_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.TimeLine.internal_static_fish_Group_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.TimeLine.Group.class, fish.TimeLine.Group.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private float time_ = 0F;
    /**
     * <pre>
     * Time when this group should spawn
     * </pre>
     *
     * <code>float time = 1;</code>
     * @return The time.
     */
    @java.lang.Override
    public float getTime() {
      return time_;
    }

    public static final int GROUP_FIELD_NUMBER = 2;
    private int group_ = 0;
    /**
     * <pre>
     * Group identifier
     * </pre>
     *
     * <code>uint32 group = 2;</code>
     * @return The group.
     */
    @java.lang.Override
    public int getGroup() {
      return group_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(time_) != 0) {
        output.writeFloat(1, time_);
      }
      if (group_ != 0) {
        output.writeUInt32(2, group_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(time_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, time_);
      }
      if (group_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, group_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.TimeLine.Group)) {
        return super.equals(obj);
      }
      fish.TimeLine.Group other = (fish.TimeLine.Group) obj;

      if (java.lang.Float.floatToIntBits(getTime())
          != java.lang.Float.floatToIntBits(
              other.getTime())) return false;
      if (getGroup()
          != other.getGroup()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTime());
      hash = (37 * hash) + GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getGroup();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.TimeLine.Group parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.TimeLine.Group parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.TimeLine.Group parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.TimeLine.Group parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.TimeLine.Group parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.TimeLine.Group parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.TimeLine.Group parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.TimeLine.Group parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.TimeLine.Group parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.TimeLine.Group parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.TimeLine.Group parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.TimeLine.Group parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.TimeLine.Group prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Group message representing a fish group to spawn
     * </pre>
     *
     * Protobuf type {@code fish.Group}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.Group)
        fish.TimeLine.GroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.TimeLine.internal_static_fish_Group_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.TimeLine.internal_static_fish_Group_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.TimeLine.Group.class, fish.TimeLine.Group.Builder.class);
      }

      // Construct using fish.TimeLine.Group.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        time_ = 0F;
        group_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.TimeLine.internal_static_fish_Group_descriptor;
      }

      @java.lang.Override
      public fish.TimeLine.Group getDefaultInstanceForType() {
        return fish.TimeLine.Group.getDefaultInstance();
      }

      @java.lang.Override
      public fish.TimeLine.Group build() {
        fish.TimeLine.Group result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.TimeLine.Group buildPartial() {
        fish.TimeLine.Group result = new fish.TimeLine.Group(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(fish.TimeLine.Group result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.group_ = group_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.TimeLine.Group) {
          return mergeFrom((fish.TimeLine.Group)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.TimeLine.Group other) {
        if (other == fish.TimeLine.Group.getDefaultInstance()) return this;
        if (java.lang.Float.floatToRawIntBits(other.getTime()) != 0) {
          setTime(other.getTime());
        }
        if (other.getGroup() != 0) {
          setGroup(other.getGroup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                time_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 16: {
                group_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float time_ ;
      /**
       * <pre>
       * Time when this group should spawn
       * </pre>
       *
       * <code>float time = 1;</code>
       * @return The time.
       */
      @java.lang.Override
      public float getTime() {
        return time_;
      }
      /**
       * <pre>
       * Time when this group should spawn
       * </pre>
       *
       * <code>float time = 1;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(float value) {

        time_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time when this group should spawn
       * </pre>
       *
       * <code>float time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0F;
        onChanged();
        return this;
      }

      private int group_ ;
      /**
       * <pre>
       * Group identifier
       * </pre>
       *
       * <code>uint32 group = 2;</code>
       * @return The group.
       */
      @java.lang.Override
      public int getGroup() {
        return group_;
      }
      /**
       * <pre>
       * Group identifier
       * </pre>
       *
       * <code>uint32 group = 2;</code>
       * @param value The group to set.
       * @return This builder for chaining.
       */
      public Builder setGroup(int value) {

        group_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Group identifier
       * </pre>
       *
       * <code>uint32 group = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroup() {
        bitField0_ = (bitField0_ & ~0x00000002);
        group_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.Group)
    }

    // @@protoc_insertion_point(class_scope:fish.Group)
    private static final fish.TimeLine.Group DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.TimeLine.Group();
    }

    public static fish.TimeLine.Group getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Group>
        PARSER = new com.google.protobuf.AbstractParser<Group>() {
      @java.lang.Override
      public Group parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Group> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Group> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.TimeLine.Group getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_Timeline_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_Timeline_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_Group_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_Group_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016TimeLine.proto\022\004fish\"a\n\010Timeline\022\016\n\006se" +
      "rial\030\001 \001(\r\022\014\n\004time\030\002 \001(\r\022\r\n\005pause\030\003 \001(\r\022" +
      "\032\n\005group\030\004 \003(\0132\013.fish.Group\022\014\n\004dead\030\005 \003(" +
      "\r\"$\n\005Group\022\014\n\004time\030\001 \001(\002\022\r\n\005group\030\002 \001(\rb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_fish_Timeline_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fish_Timeline_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_Timeline_descriptor,
        new java.lang.String[] { "Serial", "Time", "Pause", "Group", "Dead", });
    internal_static_fish_Group_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_fish_Group_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_Group_descriptor,
        new java.lang.String[] { "Time", "Group", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
