// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Fish.proto
// Protobuf Java Version: 4.30.0

package fish;

public final class FishOuterClass {
  private FishOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 0,
      /* suffix= */ "",
      FishOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ScriptOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.Script)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    java.util.List<fish.FishOuterClass.MainData> 
        getMainList();
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    fish.FishOuterClass.MainData getMain(int index);
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    int getMainCount();
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    java.util.List<? extends fish.FishOuterClass.MainDataOrBuilder> 
        getMainOrBuilderList();
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    fish.FishOuterClass.MainDataOrBuilder getMainOrBuilder(
        int index);

    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    java.util.List<fish.FishOuterClass.RandomData> 
        getRandomList();
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    fish.FishOuterClass.RandomData getRandom(int index);
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    int getRandomCount();
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    java.util.List<? extends fish.FishOuterClass.RandomDataOrBuilder> 
        getRandomOrBuilderList();
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    fish.FishOuterClass.RandomDataOrBuilder getRandomOrBuilder(
        int index);

    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    java.util.List<fish.FishOuterClass.GroupData> 
        getGroupList();
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    fish.FishOuterClass.GroupData getGroup(int index);
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    int getGroupCount();
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    java.util.List<? extends fish.FishOuterClass.GroupDataOrBuilder> 
        getGroupOrBuilderList();
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    fish.FishOuterClass.GroupDataOrBuilder getGroupOrBuilder(
        int index);

    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    java.util.List<fish.FishOuterClass.PathData> 
        getPathList();
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    fish.FishOuterClass.PathData getPath(int index);
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    int getPathCount();
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    java.util.List<? extends fish.FishOuterClass.PathDataOrBuilder> 
        getPathOrBuilderList();
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    fish.FishOuterClass.PathDataOrBuilder getPathOrBuilder(
        int index);

    /**
     * <code>int64 version = 5;</code>
     * @return The version.
     */
    long getVersion();
  }
  /**
   * <pre>
   * The main script object
   * </pre>
   *
   * Protobuf type {@code fish.Script}
   */
  public static final class Script extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.Script)
      ScriptOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        Script.class.getName());
    }
    // Use Script.newBuilder() to construct.
    private Script(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Script() {
      main_ = java.util.Collections.emptyList();
      random_ = java.util.Collections.emptyList();
      group_ = java.util.Collections.emptyList();
      path_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_Script_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_Script_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.Script.class, fish.FishOuterClass.Script.Builder.class);
    }

    public static final int MAIN_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.MainData> main_;
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.MainData> getMainList() {
      return main_;
    }
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.MainDataOrBuilder> 
        getMainOrBuilderList() {
      return main_;
    }
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    @java.lang.Override
    public int getMainCount() {
      return main_.size();
    }
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.MainData getMain(int index) {
      return main_.get(index);
    }
    /**
     * <code>repeated .fish.MainData main = 1;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.MainDataOrBuilder getMainOrBuilder(
        int index) {
      return main_.get(index);
    }

    public static final int RANDOM_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.RandomData> random_;
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.RandomData> getRandomList() {
      return random_;
    }
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.RandomDataOrBuilder> 
        getRandomOrBuilderList() {
      return random_;
    }
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    @java.lang.Override
    public int getRandomCount() {
      return random_.size();
    }
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.RandomData getRandom(int index) {
      return random_.get(index);
    }
    /**
     * <code>repeated .fish.RandomData random = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.RandomDataOrBuilder getRandomOrBuilder(
        int index) {
      return random_.get(index);
    }

    public static final int GROUP_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.GroupData> group_;
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.GroupData> getGroupList() {
      return group_;
    }
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.GroupDataOrBuilder> 
        getGroupOrBuilderList() {
      return group_;
    }
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    @java.lang.Override
    public int getGroupCount() {
      return group_.size();
    }
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.GroupData getGroup(int index) {
      return group_.get(index);
    }
    /**
     * <code>repeated .fish.GroupData group = 3;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.GroupDataOrBuilder getGroupOrBuilder(
        int index) {
      return group_.get(index);
    }

    public static final int PATH_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.PathData> path_;
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.PathData> getPathList() {
      return path_;
    }
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.PathDataOrBuilder> 
        getPathOrBuilderList() {
      return path_;
    }
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    @java.lang.Override
    public int getPathCount() {
      return path_.size();
    }
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.PathData getPath(int index) {
      return path_.get(index);
    }
    /**
     * <code>repeated .fish.PathData path = 4;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.PathDataOrBuilder getPathOrBuilder(
        int index) {
      return path_.get(index);
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private long version_ = 0L;
    /**
     * <code>int64 version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public long getVersion() {
      return version_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < main_.size(); i++) {
        output.writeMessage(1, main_.get(i));
      }
      for (int i = 0; i < random_.size(); i++) {
        output.writeMessage(2, random_.get(i));
      }
      for (int i = 0; i < group_.size(); i++) {
        output.writeMessage(3, group_.get(i));
      }
      for (int i = 0; i < path_.size(); i++) {
        output.writeMessage(4, path_.get(i));
      }
      if (version_ != 0L) {
        output.writeInt64(5, version_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < main_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, main_.get(i));
      }
      for (int i = 0; i < random_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, random_.get(i));
      }
      for (int i = 0; i < group_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, group_.get(i));
      }
      for (int i = 0; i < path_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, path_.get(i));
      }
      if (version_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.Script)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.Script other = (fish.FishOuterClass.Script) obj;

      if (!getMainList()
          .equals(other.getMainList())) return false;
      if (!getRandomList()
          .equals(other.getRandomList())) return false;
      if (!getGroupList()
          .equals(other.getGroupList())) return false;
      if (!getPathList()
          .equals(other.getPathList())) return false;
      if (getVersion()
          != other.getVersion()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMainCount() > 0) {
        hash = (37 * hash) + MAIN_FIELD_NUMBER;
        hash = (53 * hash) + getMainList().hashCode();
      }
      if (getRandomCount() > 0) {
        hash = (37 * hash) + RANDOM_FIELD_NUMBER;
        hash = (53 * hash) + getRandomList().hashCode();
      }
      if (getGroupCount() > 0) {
        hash = (37 * hash) + GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getGroupList().hashCode();
      }
      if (getPathCount() > 0) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPathList().hashCode();
      }
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersion());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.Script parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Script parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Script parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Script parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Script parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Script parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Script parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Script parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.Script parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.Script parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.Script parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Script parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.Script prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The main script object
     * </pre>
     *
     * Protobuf type {@code fish.Script}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.Script)
        fish.FishOuterClass.ScriptOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_Script_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_Script_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.Script.class, fish.FishOuterClass.Script.Builder.class);
      }

      // Construct using fish.FishOuterClass.Script.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (mainBuilder_ == null) {
          main_ = java.util.Collections.emptyList();
        } else {
          main_ = null;
          mainBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (randomBuilder_ == null) {
          random_ = java.util.Collections.emptyList();
        } else {
          random_ = null;
          randomBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (groupBuilder_ == null) {
          group_ = java.util.Collections.emptyList();
        } else {
          group_ = null;
          groupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (pathBuilder_ == null) {
          path_ = java.util.Collections.emptyList();
        } else {
          path_ = null;
          pathBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        version_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_Script_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.Script getDefaultInstanceForType() {
        return fish.FishOuterClass.Script.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.Script build() {
        fish.FishOuterClass.Script result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.Script buildPartial() {
        fish.FishOuterClass.Script result = new fish.FishOuterClass.Script(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(fish.FishOuterClass.Script result) {
        if (mainBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            main_ = java.util.Collections.unmodifiableList(main_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.main_ = main_;
        } else {
          result.main_ = mainBuilder_.build();
        }
        if (randomBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            random_ = java.util.Collections.unmodifiableList(random_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.random_ = random_;
        } else {
          result.random_ = randomBuilder_.build();
        }
        if (groupBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            group_ = java.util.Collections.unmodifiableList(group_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.group_ = group_;
        } else {
          result.group_ = groupBuilder_.build();
        }
        if (pathBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            path_ = java.util.Collections.unmodifiableList(path_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.path_ = path_;
        } else {
          result.path_ = pathBuilder_.build();
        }
      }

      private void buildPartial0(fish.FishOuterClass.Script result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.version_ = version_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.Script) {
          return mergeFrom((fish.FishOuterClass.Script)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.Script other) {
        if (other == fish.FishOuterClass.Script.getDefaultInstance()) return this;
        if (mainBuilder_ == null) {
          if (!other.main_.isEmpty()) {
            if (main_.isEmpty()) {
              main_ = other.main_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMainIsMutable();
              main_.addAll(other.main_);
            }
            onChanged();
          }
        } else {
          if (!other.main_.isEmpty()) {
            if (mainBuilder_.isEmpty()) {
              mainBuilder_.dispose();
              mainBuilder_ = null;
              main_ = other.main_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mainBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetMainFieldBuilder() : null;
            } else {
              mainBuilder_.addAllMessages(other.main_);
            }
          }
        }
        if (randomBuilder_ == null) {
          if (!other.random_.isEmpty()) {
            if (random_.isEmpty()) {
              random_ = other.random_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRandomIsMutable();
              random_.addAll(other.random_);
            }
            onChanged();
          }
        } else {
          if (!other.random_.isEmpty()) {
            if (randomBuilder_.isEmpty()) {
              randomBuilder_.dispose();
              randomBuilder_ = null;
              random_ = other.random_;
              bitField0_ = (bitField0_ & ~0x00000002);
              randomBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetRandomFieldBuilder() : null;
            } else {
              randomBuilder_.addAllMessages(other.random_);
            }
          }
        }
        if (groupBuilder_ == null) {
          if (!other.group_.isEmpty()) {
            if (group_.isEmpty()) {
              group_ = other.group_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGroupIsMutable();
              group_.addAll(other.group_);
            }
            onChanged();
          }
        } else {
          if (!other.group_.isEmpty()) {
            if (groupBuilder_.isEmpty()) {
              groupBuilder_.dispose();
              groupBuilder_ = null;
              group_ = other.group_;
              bitField0_ = (bitField0_ & ~0x00000004);
              groupBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetGroupFieldBuilder() : null;
            } else {
              groupBuilder_.addAllMessages(other.group_);
            }
          }
        }
        if (pathBuilder_ == null) {
          if (!other.path_.isEmpty()) {
            if (path_.isEmpty()) {
              path_ = other.path_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePathIsMutable();
              path_.addAll(other.path_);
            }
            onChanged();
          }
        } else {
          if (!other.path_.isEmpty()) {
            if (pathBuilder_.isEmpty()) {
              pathBuilder_.dispose();
              pathBuilder_ = null;
              path_ = other.path_;
              bitField0_ = (bitField0_ & ~0x00000008);
              pathBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetPathFieldBuilder() : null;
            } else {
              pathBuilder_.addAllMessages(other.path_);
            }
          }
        }
        if (other.getVersion() != 0L) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                fish.FishOuterClass.MainData m =
                    input.readMessage(
                        fish.FishOuterClass.MainData.parser(),
                        extensionRegistry);
                if (mainBuilder_ == null) {
                  ensureMainIsMutable();
                  main_.add(m);
                } else {
                  mainBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                fish.FishOuterClass.RandomData m =
                    input.readMessage(
                        fish.FishOuterClass.RandomData.parser(),
                        extensionRegistry);
                if (randomBuilder_ == null) {
                  ensureRandomIsMutable();
                  random_.add(m);
                } else {
                  randomBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                fish.FishOuterClass.GroupData m =
                    input.readMessage(
                        fish.FishOuterClass.GroupData.parser(),
                        extensionRegistry);
                if (groupBuilder_ == null) {
                  ensureGroupIsMutable();
                  group_.add(m);
                } else {
                  groupBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                fish.FishOuterClass.PathData m =
                    input.readMessage(
                        fish.FishOuterClass.PathData.parser(),
                        extensionRegistry);
                if (pathBuilder_ == null) {
                  ensurePathIsMutable();
                  path_.add(m);
                } else {
                  pathBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 40: {
                version_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<fish.FishOuterClass.MainData> main_ =
        java.util.Collections.emptyList();
      private void ensureMainIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          main_ = new java.util.ArrayList<fish.FishOuterClass.MainData>(main_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.MainData, fish.FishOuterClass.MainData.Builder, fish.FishOuterClass.MainDataOrBuilder> mainBuilder_;

      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public java.util.List<fish.FishOuterClass.MainData> getMainList() {
        if (mainBuilder_ == null) {
          return java.util.Collections.unmodifiableList(main_);
        } else {
          return mainBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public int getMainCount() {
        if (mainBuilder_ == null) {
          return main_.size();
        } else {
          return mainBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public fish.FishOuterClass.MainData getMain(int index) {
        if (mainBuilder_ == null) {
          return main_.get(index);
        } else {
          return mainBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder setMain(
          int index, fish.FishOuterClass.MainData value) {
        if (mainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMainIsMutable();
          main_.set(index, value);
          onChanged();
        } else {
          mainBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder setMain(
          int index, fish.FishOuterClass.MainData.Builder builderForValue) {
        if (mainBuilder_ == null) {
          ensureMainIsMutable();
          main_.set(index, builderForValue.build());
          onChanged();
        } else {
          mainBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder addMain(fish.FishOuterClass.MainData value) {
        if (mainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMainIsMutable();
          main_.add(value);
          onChanged();
        } else {
          mainBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder addMain(
          int index, fish.FishOuterClass.MainData value) {
        if (mainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMainIsMutable();
          main_.add(index, value);
          onChanged();
        } else {
          mainBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder addMain(
          fish.FishOuterClass.MainData.Builder builderForValue) {
        if (mainBuilder_ == null) {
          ensureMainIsMutable();
          main_.add(builderForValue.build());
          onChanged();
        } else {
          mainBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder addMain(
          int index, fish.FishOuterClass.MainData.Builder builderForValue) {
        if (mainBuilder_ == null) {
          ensureMainIsMutable();
          main_.add(index, builderForValue.build());
          onChanged();
        } else {
          mainBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder addAllMain(
          java.lang.Iterable<? extends fish.FishOuterClass.MainData> values) {
        if (mainBuilder_ == null) {
          ensureMainIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, main_);
          onChanged();
        } else {
          mainBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder clearMain() {
        if (mainBuilder_ == null) {
          main_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mainBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public Builder removeMain(int index) {
        if (mainBuilder_ == null) {
          ensureMainIsMutable();
          main_.remove(index);
          onChanged();
        } else {
          mainBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public fish.FishOuterClass.MainData.Builder getMainBuilder(
          int index) {
        return internalGetMainFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public fish.FishOuterClass.MainDataOrBuilder getMainOrBuilder(
          int index) {
        if (mainBuilder_ == null) {
          return main_.get(index);  } else {
          return mainBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.MainDataOrBuilder> 
           getMainOrBuilderList() {
        if (mainBuilder_ != null) {
          return mainBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(main_);
        }
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public fish.FishOuterClass.MainData.Builder addMainBuilder() {
        return internalGetMainFieldBuilder().addBuilder(
            fish.FishOuterClass.MainData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public fish.FishOuterClass.MainData.Builder addMainBuilder(
          int index) {
        return internalGetMainFieldBuilder().addBuilder(
            index, fish.FishOuterClass.MainData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.MainData main = 1;</code>
       */
      public java.util.List<fish.FishOuterClass.MainData.Builder> 
           getMainBuilderList() {
        return internalGetMainFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.MainData, fish.FishOuterClass.MainData.Builder, fish.FishOuterClass.MainDataOrBuilder> 
          internalGetMainFieldBuilder() {
        if (mainBuilder_ == null) {
          mainBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.MainData, fish.FishOuterClass.MainData.Builder, fish.FishOuterClass.MainDataOrBuilder>(
                  main_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          main_ = null;
        }
        return mainBuilder_;
      }

      private java.util.List<fish.FishOuterClass.RandomData> random_ =
        java.util.Collections.emptyList();
      private void ensureRandomIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          random_ = new java.util.ArrayList<fish.FishOuterClass.RandomData>(random_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.RandomData, fish.FishOuterClass.RandomData.Builder, fish.FishOuterClass.RandomDataOrBuilder> randomBuilder_;

      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.RandomData> getRandomList() {
        if (randomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(random_);
        } else {
          return randomBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public int getRandomCount() {
        if (randomBuilder_ == null) {
          return random_.size();
        } else {
          return randomBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public fish.FishOuterClass.RandomData getRandom(int index) {
        if (randomBuilder_ == null) {
          return random_.get(index);
        } else {
          return randomBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder setRandom(
          int index, fish.FishOuterClass.RandomData value) {
        if (randomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomIsMutable();
          random_.set(index, value);
          onChanged();
        } else {
          randomBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder setRandom(
          int index, fish.FishOuterClass.RandomData.Builder builderForValue) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.set(index, builderForValue.build());
          onChanged();
        } else {
          randomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder addRandom(fish.FishOuterClass.RandomData value) {
        if (randomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomIsMutable();
          random_.add(value);
          onChanged();
        } else {
          randomBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder addRandom(
          int index, fish.FishOuterClass.RandomData value) {
        if (randomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomIsMutable();
          random_.add(index, value);
          onChanged();
        } else {
          randomBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder addRandom(
          fish.FishOuterClass.RandomData.Builder builderForValue) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.add(builderForValue.build());
          onChanged();
        } else {
          randomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder addRandom(
          int index, fish.FishOuterClass.RandomData.Builder builderForValue) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.add(index, builderForValue.build());
          onChanged();
        } else {
          randomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder addAllRandom(
          java.lang.Iterable<? extends fish.FishOuterClass.RandomData> values) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, random_);
          onChanged();
        } else {
          randomBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder clearRandom() {
        if (randomBuilder_ == null) {
          random_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          randomBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public Builder removeRandom(int index) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.remove(index);
          onChanged();
        } else {
          randomBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public fish.FishOuterClass.RandomData.Builder getRandomBuilder(
          int index) {
        return internalGetRandomFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public fish.FishOuterClass.RandomDataOrBuilder getRandomOrBuilder(
          int index) {
        if (randomBuilder_ == null) {
          return random_.get(index);  } else {
          return randomBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.RandomDataOrBuilder> 
           getRandomOrBuilderList() {
        if (randomBuilder_ != null) {
          return randomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(random_);
        }
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public fish.FishOuterClass.RandomData.Builder addRandomBuilder() {
        return internalGetRandomFieldBuilder().addBuilder(
            fish.FishOuterClass.RandomData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public fish.FishOuterClass.RandomData.Builder addRandomBuilder(
          int index) {
        return internalGetRandomFieldBuilder().addBuilder(
            index, fish.FishOuterClass.RandomData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.RandomData random = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.RandomData.Builder> 
           getRandomBuilderList() {
        return internalGetRandomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.RandomData, fish.FishOuterClass.RandomData.Builder, fish.FishOuterClass.RandomDataOrBuilder> 
          internalGetRandomFieldBuilder() {
        if (randomBuilder_ == null) {
          randomBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.RandomData, fish.FishOuterClass.RandomData.Builder, fish.FishOuterClass.RandomDataOrBuilder>(
                  random_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          random_ = null;
        }
        return randomBuilder_;
      }

      private java.util.List<fish.FishOuterClass.GroupData> group_ =
        java.util.Collections.emptyList();
      private void ensureGroupIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          group_ = new java.util.ArrayList<fish.FishOuterClass.GroupData>(group_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.GroupData, fish.FishOuterClass.GroupData.Builder, fish.FishOuterClass.GroupDataOrBuilder> groupBuilder_;

      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public java.util.List<fish.FishOuterClass.GroupData> getGroupList() {
        if (groupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(group_);
        } else {
          return groupBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public int getGroupCount() {
        if (groupBuilder_ == null) {
          return group_.size();
        } else {
          return groupBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public fish.FishOuterClass.GroupData getGroup(int index) {
        if (groupBuilder_ == null) {
          return group_.get(index);
        } else {
          return groupBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder setGroup(
          int index, fish.FishOuterClass.GroupData value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.set(index, value);
          onChanged();
        } else {
          groupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder setGroup(
          int index, fish.FishOuterClass.GroupData.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.set(index, builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder addGroup(fish.FishOuterClass.GroupData value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.add(value);
          onChanged();
        } else {
          groupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder addGroup(
          int index, fish.FishOuterClass.GroupData value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.add(index, value);
          onChanged();
        } else {
          groupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder addGroup(
          fish.FishOuterClass.GroupData.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.add(builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder addGroup(
          int index, fish.FishOuterClass.GroupData.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.add(index, builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder addAllGroup(
          java.lang.Iterable<? extends fish.FishOuterClass.GroupData> values) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, group_);
          onChanged();
        } else {
          groupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          group_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          groupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public Builder removeGroup(int index) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.remove(index);
          onChanged();
        } else {
          groupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public fish.FishOuterClass.GroupData.Builder getGroupBuilder(
          int index) {
        return internalGetGroupFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public fish.FishOuterClass.GroupDataOrBuilder getGroupOrBuilder(
          int index) {
        if (groupBuilder_ == null) {
          return group_.get(index);  } else {
          return groupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.GroupDataOrBuilder> 
           getGroupOrBuilderList() {
        if (groupBuilder_ != null) {
          return groupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(group_);
        }
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public fish.FishOuterClass.GroupData.Builder addGroupBuilder() {
        return internalGetGroupFieldBuilder().addBuilder(
            fish.FishOuterClass.GroupData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public fish.FishOuterClass.GroupData.Builder addGroupBuilder(
          int index) {
        return internalGetGroupFieldBuilder().addBuilder(
            index, fish.FishOuterClass.GroupData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.GroupData group = 3;</code>
       */
      public java.util.List<fish.FishOuterClass.GroupData.Builder> 
           getGroupBuilderList() {
        return internalGetGroupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.GroupData, fish.FishOuterClass.GroupData.Builder, fish.FishOuterClass.GroupDataOrBuilder> 
          internalGetGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          groupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.GroupData, fish.FishOuterClass.GroupData.Builder, fish.FishOuterClass.GroupDataOrBuilder>(
                  group_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          group_ = null;
        }
        return groupBuilder_;
      }

      private java.util.List<fish.FishOuterClass.PathData> path_ =
        java.util.Collections.emptyList();
      private void ensurePathIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          path_ = new java.util.ArrayList<fish.FishOuterClass.PathData>(path_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.PathData, fish.FishOuterClass.PathData.Builder, fish.FishOuterClass.PathDataOrBuilder> pathBuilder_;

      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public java.util.List<fish.FishOuterClass.PathData> getPathList() {
        if (pathBuilder_ == null) {
          return java.util.Collections.unmodifiableList(path_);
        } else {
          return pathBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public int getPathCount() {
        if (pathBuilder_ == null) {
          return path_.size();
        } else {
          return pathBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public fish.FishOuterClass.PathData getPath(int index) {
        if (pathBuilder_ == null) {
          return path_.get(index);
        } else {
          return pathBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder setPath(
          int index, fish.FishOuterClass.PathData value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.set(index, value);
          onChanged();
        } else {
          pathBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder setPath(
          int index, fish.FishOuterClass.PathData.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.set(index, builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder addPath(fish.FishOuterClass.PathData value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.add(value);
          onChanged();
        } else {
          pathBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder addPath(
          int index, fish.FishOuterClass.PathData value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.add(index, value);
          onChanged();
        } else {
          pathBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder addPath(
          fish.FishOuterClass.PathData.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.add(builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder addPath(
          int index, fish.FishOuterClass.PathData.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.add(index, builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder addAllPath(
          java.lang.Iterable<? extends fish.FishOuterClass.PathData> values) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, path_);
          onChanged();
        } else {
          pathBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder clearPath() {
        if (pathBuilder_ == null) {
          path_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          pathBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public Builder removePath(int index) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.remove(index);
          onChanged();
        } else {
          pathBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public fish.FishOuterClass.PathData.Builder getPathBuilder(
          int index) {
        return internalGetPathFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public fish.FishOuterClass.PathDataOrBuilder getPathOrBuilder(
          int index) {
        if (pathBuilder_ == null) {
          return path_.get(index);  } else {
          return pathBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.PathDataOrBuilder> 
           getPathOrBuilderList() {
        if (pathBuilder_ != null) {
          return pathBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(path_);
        }
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public fish.FishOuterClass.PathData.Builder addPathBuilder() {
        return internalGetPathFieldBuilder().addBuilder(
            fish.FishOuterClass.PathData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public fish.FishOuterClass.PathData.Builder addPathBuilder(
          int index) {
        return internalGetPathFieldBuilder().addBuilder(
            index, fish.FishOuterClass.PathData.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.PathData path = 4;</code>
       */
      public java.util.List<fish.FishOuterClass.PathData.Builder> 
           getPathBuilderList() {
        return internalGetPathFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.PathData, fish.FishOuterClass.PathData.Builder, fish.FishOuterClass.PathDataOrBuilder> 
          internalGetPathFieldBuilder() {
        if (pathBuilder_ == null) {
          pathBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.PathData, fish.FishOuterClass.PathData.Builder, fish.FishOuterClass.PathDataOrBuilder>(
                  path_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          path_ = null;
        }
        return pathBuilder_;
      }

      private long version_ ;
      /**
       * <code>int64 version = 5;</code>
       * @return The version.
       */
      @java.lang.Override
      public long getVersion() {
        return version_;
      }
      /**
       * <code>int64 version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(long value) {

        version_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int64 version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        version_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.Script)
    }

    // @@protoc_insertion_point(class_scope:fish.Script)
    private static final fish.FishOuterClass.Script DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.Script();
    }

    public static fish.FishOuterClass.Script getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Script>
        PARSER = new com.google.protobuf.AbstractParser<Script>() {
      @java.lang.Override
      public Script parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Script> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Script> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.Script getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MainDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.MainData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 no = 1;</code>
     * @return The no.
     */
    int getNo();

    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    java.util.List<fish.FishOuterClass.MainDataSub> 
        getRandomsList();
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    fish.FishOuterClass.MainDataSub getRandoms(int index);
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    int getRandomsCount();
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    java.util.List<? extends fish.FishOuterClass.MainDataSubOrBuilder> 
        getRandomsOrBuilderList();
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    fish.FishOuterClass.MainDataSubOrBuilder getRandomsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * MainData message (kr)
   * </pre>
   *
   * Protobuf type {@code fish.MainData}
   */
  public static final class MainData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.MainData)
      MainDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        MainData.class.getName());
    }
    // Use MainData.newBuilder() to construct.
    private MainData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private MainData() {
      randoms_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_MainData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_MainData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.MainData.class, fish.FishOuterClass.MainData.Builder.class);
    }

    public static final int NO_FIELD_NUMBER = 1;
    private int no_ = 0;
    /**
     * <code>int32 no = 1;</code>
     * @return The no.
     */
    @java.lang.Override
    public int getNo() {
      return no_;
    }

    public static final int RANDOMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.MainDataSub> randoms_;
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.MainDataSub> getRandomsList() {
      return randoms_;
    }
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.MainDataSubOrBuilder> 
        getRandomsOrBuilderList() {
      return randoms_;
    }
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    @java.lang.Override
    public int getRandomsCount() {
      return randoms_.size();
    }
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.MainDataSub getRandoms(int index) {
      return randoms_.get(index);
    }
    /**
     * <code>repeated .fish.MainDataSub randoms = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.MainDataSubOrBuilder getRandomsOrBuilder(
        int index) {
      return randoms_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (no_ != 0) {
        output.writeInt32(1, no_);
      }
      for (int i = 0; i < randoms_.size(); i++) {
        output.writeMessage(2, randoms_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (no_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, no_);
      }
      for (int i = 0; i < randoms_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, randoms_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.MainData)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.MainData other = (fish.FishOuterClass.MainData) obj;

      if (getNo()
          != other.getNo()) return false;
      if (!getRandomsList()
          .equals(other.getRandomsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NO_FIELD_NUMBER;
      hash = (53 * hash) + getNo();
      if (getRandomsCount() > 0) {
        hash = (37 * hash) + RANDOMS_FIELD_NUMBER;
        hash = (53 * hash) + getRandomsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.MainData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.MainData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.MainData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.MainData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.MainData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.MainData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.MainData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.MainData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.MainData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.MainData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.MainData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.MainData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.MainData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MainData message (kr)
     * </pre>
     *
     * Protobuf type {@code fish.MainData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.MainData)
        fish.FishOuterClass.MainDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_MainData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_MainData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.MainData.class, fish.FishOuterClass.MainData.Builder.class);
      }

      // Construct using fish.FishOuterClass.MainData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        no_ = 0;
        if (randomsBuilder_ == null) {
          randoms_ = java.util.Collections.emptyList();
        } else {
          randoms_ = null;
          randomsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_MainData_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.MainData getDefaultInstanceForType() {
        return fish.FishOuterClass.MainData.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.MainData build() {
        fish.FishOuterClass.MainData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.MainData buildPartial() {
        fish.FishOuterClass.MainData result = new fish.FishOuterClass.MainData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(fish.FishOuterClass.MainData result) {
        if (randomsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            randoms_ = java.util.Collections.unmodifiableList(randoms_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.randoms_ = randoms_;
        } else {
          result.randoms_ = randomsBuilder_.build();
        }
      }

      private void buildPartial0(fish.FishOuterClass.MainData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.no_ = no_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.MainData) {
          return mergeFrom((fish.FishOuterClass.MainData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.MainData other) {
        if (other == fish.FishOuterClass.MainData.getDefaultInstance()) return this;
        if (other.getNo() != 0) {
          setNo(other.getNo());
        }
        if (randomsBuilder_ == null) {
          if (!other.randoms_.isEmpty()) {
            if (randoms_.isEmpty()) {
              randoms_ = other.randoms_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRandomsIsMutable();
              randoms_.addAll(other.randoms_);
            }
            onChanged();
          }
        } else {
          if (!other.randoms_.isEmpty()) {
            if (randomsBuilder_.isEmpty()) {
              randomsBuilder_.dispose();
              randomsBuilder_ = null;
              randoms_ = other.randoms_;
              bitField0_ = (bitField0_ & ~0x00000002);
              randomsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetRandomsFieldBuilder() : null;
            } else {
              randomsBuilder_.addAllMessages(other.randoms_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                no_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                fish.FishOuterClass.MainDataSub m =
                    input.readMessage(
                        fish.FishOuterClass.MainDataSub.parser(),
                        extensionRegistry);
                if (randomsBuilder_ == null) {
                  ensureRandomsIsMutable();
                  randoms_.add(m);
                } else {
                  randomsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int no_ ;
      /**
       * <code>int32 no = 1;</code>
       * @return The no.
       */
      @java.lang.Override
      public int getNo() {
        return no_;
      }
      /**
       * <code>int32 no = 1;</code>
       * @param value The no to set.
       * @return This builder for chaining.
       */
      public Builder setNo(int value) {

        no_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 no = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        no_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<fish.FishOuterClass.MainDataSub> randoms_ =
        java.util.Collections.emptyList();
      private void ensureRandomsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          randoms_ = new java.util.ArrayList<fish.FishOuterClass.MainDataSub>(randoms_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.MainDataSub, fish.FishOuterClass.MainDataSub.Builder, fish.FishOuterClass.MainDataSubOrBuilder> randomsBuilder_;

      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.MainDataSub> getRandomsList() {
        if (randomsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(randoms_);
        } else {
          return randomsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public int getRandomsCount() {
        if (randomsBuilder_ == null) {
          return randoms_.size();
        } else {
          return randomsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public fish.FishOuterClass.MainDataSub getRandoms(int index) {
        if (randomsBuilder_ == null) {
          return randoms_.get(index);
        } else {
          return randomsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder setRandoms(
          int index, fish.FishOuterClass.MainDataSub value) {
        if (randomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomsIsMutable();
          randoms_.set(index, value);
          onChanged();
        } else {
          randomsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder setRandoms(
          int index, fish.FishOuterClass.MainDataSub.Builder builderForValue) {
        if (randomsBuilder_ == null) {
          ensureRandomsIsMutable();
          randoms_.set(index, builderForValue.build());
          onChanged();
        } else {
          randomsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder addRandoms(fish.FishOuterClass.MainDataSub value) {
        if (randomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomsIsMutable();
          randoms_.add(value);
          onChanged();
        } else {
          randomsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder addRandoms(
          int index, fish.FishOuterClass.MainDataSub value) {
        if (randomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomsIsMutable();
          randoms_.add(index, value);
          onChanged();
        } else {
          randomsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder addRandoms(
          fish.FishOuterClass.MainDataSub.Builder builderForValue) {
        if (randomsBuilder_ == null) {
          ensureRandomsIsMutable();
          randoms_.add(builderForValue.build());
          onChanged();
        } else {
          randomsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder addRandoms(
          int index, fish.FishOuterClass.MainDataSub.Builder builderForValue) {
        if (randomsBuilder_ == null) {
          ensureRandomsIsMutable();
          randoms_.add(index, builderForValue.build());
          onChanged();
        } else {
          randomsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder addAllRandoms(
          java.lang.Iterable<? extends fish.FishOuterClass.MainDataSub> values) {
        if (randomsBuilder_ == null) {
          ensureRandomsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, randoms_);
          onChanged();
        } else {
          randomsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder clearRandoms() {
        if (randomsBuilder_ == null) {
          randoms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          randomsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public Builder removeRandoms(int index) {
        if (randomsBuilder_ == null) {
          ensureRandomsIsMutable();
          randoms_.remove(index);
          onChanged();
        } else {
          randomsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public fish.FishOuterClass.MainDataSub.Builder getRandomsBuilder(
          int index) {
        return internalGetRandomsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public fish.FishOuterClass.MainDataSubOrBuilder getRandomsOrBuilder(
          int index) {
        if (randomsBuilder_ == null) {
          return randoms_.get(index);  } else {
          return randomsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.MainDataSubOrBuilder> 
           getRandomsOrBuilderList() {
        if (randomsBuilder_ != null) {
          return randomsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(randoms_);
        }
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public fish.FishOuterClass.MainDataSub.Builder addRandomsBuilder() {
        return internalGetRandomsFieldBuilder().addBuilder(
            fish.FishOuterClass.MainDataSub.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public fish.FishOuterClass.MainDataSub.Builder addRandomsBuilder(
          int index) {
        return internalGetRandomsFieldBuilder().addBuilder(
            index, fish.FishOuterClass.MainDataSub.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.MainDataSub randoms = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.MainDataSub.Builder> 
           getRandomsBuilderList() {
        return internalGetRandomsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.MainDataSub, fish.FishOuterClass.MainDataSub.Builder, fish.FishOuterClass.MainDataSubOrBuilder> 
          internalGetRandomsFieldBuilder() {
        if (randomsBuilder_ == null) {
          randomsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.MainDataSub, fish.FishOuterClass.MainDataSub.Builder, fish.FishOuterClass.MainDataSubOrBuilder>(
                  randoms_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          randoms_ = null;
        }
        return randomsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fish.MainData)
    }

    // @@protoc_insertion_point(class_scope:fish.MainData)
    private static final fish.FishOuterClass.MainData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.MainData();
    }

    public static fish.FishOuterClass.MainData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MainData>
        PARSER = new com.google.protobuf.AbstractParser<MainData>() {
      @java.lang.Override
      public MainData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MainData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MainData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.MainData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MainDataSubOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.MainDataSub)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int32 random = 2;</code>
     * @return A list containing the random.
     */
    java.util.List<java.lang.Integer> getRandomList();
    /**
     * <code>repeated int32 random = 2;</code>
     * @return The count of random.
     */
    int getRandomCount();
    /**
     * <code>repeated int32 random = 2;</code>
     * @param index The index of the element to return.
     * @return The random at the given index.
     */
    int getRandom(int index);
  }
  /**
   * <pre>
   * MainDataSub message (Mr)
   * </pre>
   *
   * Protobuf type {@code fish.MainDataSub}
   */
  public static final class MainDataSub extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.MainDataSub)
      MainDataSubOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        MainDataSub.class.getName());
    }
    // Use MainDataSub.newBuilder() to construct.
    private MainDataSub(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private MainDataSub() {
      name_ = "";
      random_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_MainDataSub_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_MainDataSub_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.MainDataSub.class, fish.FishOuterClass.MainDataSub.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RANDOM_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList random_ =
        emptyIntList();
    /**
     * <code>repeated int32 random = 2;</code>
     * @return A list containing the random.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRandomList() {
      return random_;
    }
    /**
     * <code>repeated int32 random = 2;</code>
     * @return The count of random.
     */
    public int getRandomCount() {
      return random_.size();
    }
    /**
     * <code>repeated int32 random = 2;</code>
     * @param index The index of the element to return.
     * @return The random at the given index.
     */
    public int getRandom(int index) {
      return random_.getInt(index);
    }
    private int randomMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      if (getRandomList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(randomMemoizedSerializedSize);
      }
      for (int i = 0; i < random_.size(); i++) {
        output.writeInt32NoTag(random_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < random_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(random_.getInt(i));
        }
        size += dataSize;
        if (!getRandomList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        randomMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.MainDataSub)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.MainDataSub other = (fish.FishOuterClass.MainDataSub) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getRandomList()
          .equals(other.getRandomList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getRandomCount() > 0) {
        hash = (37 * hash) + RANDOM_FIELD_NUMBER;
        hash = (53 * hash) + getRandomList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.MainDataSub parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.MainDataSub parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.MainDataSub parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.MainDataSub parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.MainDataSub prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MainDataSub message (Mr)
     * </pre>
     *
     * Protobuf type {@code fish.MainDataSub}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.MainDataSub)
        fish.FishOuterClass.MainDataSubOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_MainDataSub_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_MainDataSub_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.MainDataSub.class, fish.FishOuterClass.MainDataSub.Builder.class);
      }

      // Construct using fish.FishOuterClass.MainDataSub.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        random_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_MainDataSub_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.MainDataSub getDefaultInstanceForType() {
        return fish.FishOuterClass.MainDataSub.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.MainDataSub build() {
        fish.FishOuterClass.MainDataSub result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.MainDataSub buildPartial() {
        fish.FishOuterClass.MainDataSub result = new fish.FishOuterClass.MainDataSub(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(fish.FishOuterClass.MainDataSub result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          random_.makeImmutable();
          result.random_ = random_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.MainDataSub) {
          return mergeFrom((fish.FishOuterClass.MainDataSub)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.MainDataSub other) {
        if (other == fish.FishOuterClass.MainDataSub.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.random_.isEmpty()) {
          if (random_.isEmpty()) {
            random_ = other.random_;
            random_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureRandomIsMutable();
            random_.addAll(other.random_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int v = input.readInt32();
                ensureRandomIsMutable();
                random_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRandomIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  random_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList random_ = emptyIntList();
      private void ensureRandomIsMutable() {
        if (!random_.isModifiable()) {
          random_ = makeMutableCopy(random_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated int32 random = 2;</code>
       * @return A list containing the random.
       */
      public java.util.List<java.lang.Integer>
          getRandomList() {
        random_.makeImmutable();
        return random_;
      }
      /**
       * <code>repeated int32 random = 2;</code>
       * @return The count of random.
       */
      public int getRandomCount() {
        return random_.size();
      }
      /**
       * <code>repeated int32 random = 2;</code>
       * @param index The index of the element to return.
       * @return The random at the given index.
       */
      public int getRandom(int index) {
        return random_.getInt(index);
      }
      /**
       * <code>repeated int32 random = 2;</code>
       * @param index The index to set the value at.
       * @param value The random to set.
       * @return This builder for chaining.
       */
      public Builder setRandom(
          int index, int value) {

        ensureRandomIsMutable();
        random_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 random = 2;</code>
       * @param value The random to add.
       * @return This builder for chaining.
       */
      public Builder addRandom(int value) {

        ensureRandomIsMutable();
        random_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 random = 2;</code>
       * @param values The random to add.
       * @return This builder for chaining.
       */
      public Builder addAllRandom(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRandomIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, random_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 random = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandom() {
        random_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.MainDataSub)
    }

    // @@protoc_insertion_point(class_scope:fish.MainDataSub)
    private static final fish.FishOuterClass.MainDataSub DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.MainDataSub();
    }

    public static fish.FishOuterClass.MainDataSub getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MainDataSub>
        PARSER = new com.google.protobuf.AbstractParser<MainDataSub>() {
      @java.lang.Override
      public MainDataSub parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MainDataSub> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MainDataSub> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.MainDataSub getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.RandomData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    java.util.List<fish.FishOuterClass.Random> 
        getRandomList();
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    fish.FishOuterClass.Random getRandom(int index);
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    int getRandomCount();
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    java.util.List<? extends fish.FishOuterClass.RandomOrBuilder> 
        getRandomOrBuilderList();
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    fish.FishOuterClass.RandomOrBuilder getRandomOrBuilder(
        int index);
  }
  /**
   * <pre>
   * RandomData message (Er)
   * </pre>
   *
   * Protobuf type {@code fish.RandomData}
   */
  public static final class RandomData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.RandomData)
      RandomDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        RandomData.class.getName());
    }
    // Use RandomData.newBuilder() to construct.
    private RandomData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RandomData() {
      random_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_RandomData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_RandomData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.RandomData.class, fish.FishOuterClass.RandomData.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int RANDOM_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.Random> random_;
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.Random> getRandomList() {
      return random_;
    }
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.RandomOrBuilder> 
        getRandomOrBuilderList() {
      return random_;
    }
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    @java.lang.Override
    public int getRandomCount() {
      return random_.size();
    }
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.Random getRandom(int index) {
      return random_.get(index);
    }
    /**
     * <code>repeated .fish.Random random = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.RandomOrBuilder getRandomOrBuilder(
        int index) {
      return random_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < random_.size(); i++) {
        output.writeMessage(2, random_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      for (int i = 0; i < random_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, random_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.RandomData)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.RandomData other = (fish.FishOuterClass.RandomData) obj;

      if (getId()
          != other.getId()) return false;
      if (!getRandomList()
          .equals(other.getRandomList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (getRandomCount() > 0) {
        hash = (37 * hash) + RANDOM_FIELD_NUMBER;
        hash = (53 * hash) + getRandomList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.RandomData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.RandomData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.RandomData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.RandomData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.RandomData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.RandomData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.RandomData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.RandomData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.RandomData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.RandomData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.RandomData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.RandomData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.RandomData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RandomData message (Er)
     * </pre>
     *
     * Protobuf type {@code fish.RandomData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.RandomData)
        fish.FishOuterClass.RandomDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_RandomData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_RandomData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.RandomData.class, fish.FishOuterClass.RandomData.Builder.class);
      }

      // Construct using fish.FishOuterClass.RandomData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        if (randomBuilder_ == null) {
          random_ = java.util.Collections.emptyList();
        } else {
          random_ = null;
          randomBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_RandomData_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.RandomData getDefaultInstanceForType() {
        return fish.FishOuterClass.RandomData.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.RandomData build() {
        fish.FishOuterClass.RandomData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.RandomData buildPartial() {
        fish.FishOuterClass.RandomData result = new fish.FishOuterClass.RandomData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(fish.FishOuterClass.RandomData result) {
        if (randomBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            random_ = java.util.Collections.unmodifiableList(random_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.random_ = random_;
        } else {
          result.random_ = randomBuilder_.build();
        }
      }

      private void buildPartial0(fish.FishOuterClass.RandomData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.RandomData) {
          return mergeFrom((fish.FishOuterClass.RandomData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.RandomData other) {
        if (other == fish.FishOuterClass.RandomData.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (randomBuilder_ == null) {
          if (!other.random_.isEmpty()) {
            if (random_.isEmpty()) {
              random_ = other.random_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRandomIsMutable();
              random_.addAll(other.random_);
            }
            onChanged();
          }
        } else {
          if (!other.random_.isEmpty()) {
            if (randomBuilder_.isEmpty()) {
              randomBuilder_.dispose();
              randomBuilder_ = null;
              random_ = other.random_;
              bitField0_ = (bitField0_ & ~0x00000002);
              randomBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetRandomFieldBuilder() : null;
            } else {
              randomBuilder_.addAllMessages(other.random_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                fish.FishOuterClass.Random m =
                    input.readMessage(
                        fish.FishOuterClass.Random.parser(),
                        extensionRegistry);
                if (randomBuilder_ == null) {
                  ensureRandomIsMutable();
                  random_.add(m);
                } else {
                  randomBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<fish.FishOuterClass.Random> random_ =
        java.util.Collections.emptyList();
      private void ensureRandomIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          random_ = new java.util.ArrayList<fish.FishOuterClass.Random>(random_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.Random, fish.FishOuterClass.Random.Builder, fish.FishOuterClass.RandomOrBuilder> randomBuilder_;

      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.Random> getRandomList() {
        if (randomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(random_);
        } else {
          return randomBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public int getRandomCount() {
        if (randomBuilder_ == null) {
          return random_.size();
        } else {
          return randomBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public fish.FishOuterClass.Random getRandom(int index) {
        if (randomBuilder_ == null) {
          return random_.get(index);
        } else {
          return randomBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder setRandom(
          int index, fish.FishOuterClass.Random value) {
        if (randomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomIsMutable();
          random_.set(index, value);
          onChanged();
        } else {
          randomBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder setRandom(
          int index, fish.FishOuterClass.Random.Builder builderForValue) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.set(index, builderForValue.build());
          onChanged();
        } else {
          randomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder addRandom(fish.FishOuterClass.Random value) {
        if (randomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomIsMutable();
          random_.add(value);
          onChanged();
        } else {
          randomBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder addRandom(
          int index, fish.FishOuterClass.Random value) {
        if (randomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRandomIsMutable();
          random_.add(index, value);
          onChanged();
        } else {
          randomBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder addRandom(
          fish.FishOuterClass.Random.Builder builderForValue) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.add(builderForValue.build());
          onChanged();
        } else {
          randomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder addRandom(
          int index, fish.FishOuterClass.Random.Builder builderForValue) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.add(index, builderForValue.build());
          onChanged();
        } else {
          randomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder addAllRandom(
          java.lang.Iterable<? extends fish.FishOuterClass.Random> values) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, random_);
          onChanged();
        } else {
          randomBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder clearRandom() {
        if (randomBuilder_ == null) {
          random_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          randomBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public Builder removeRandom(int index) {
        if (randomBuilder_ == null) {
          ensureRandomIsMutable();
          random_.remove(index);
          onChanged();
        } else {
          randomBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public fish.FishOuterClass.Random.Builder getRandomBuilder(
          int index) {
        return internalGetRandomFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public fish.FishOuterClass.RandomOrBuilder getRandomOrBuilder(
          int index) {
        if (randomBuilder_ == null) {
          return random_.get(index);  } else {
          return randomBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.RandomOrBuilder> 
           getRandomOrBuilderList() {
        if (randomBuilder_ != null) {
          return randomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(random_);
        }
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public fish.FishOuterClass.Random.Builder addRandomBuilder() {
        return internalGetRandomFieldBuilder().addBuilder(
            fish.FishOuterClass.Random.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public fish.FishOuterClass.Random.Builder addRandomBuilder(
          int index) {
        return internalGetRandomFieldBuilder().addBuilder(
            index, fish.FishOuterClass.Random.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.Random random = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.Random.Builder> 
           getRandomBuilderList() {
        return internalGetRandomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.Random, fish.FishOuterClass.Random.Builder, fish.FishOuterClass.RandomOrBuilder> 
          internalGetRandomFieldBuilder() {
        if (randomBuilder_ == null) {
          randomBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.Random, fish.FishOuterClass.Random.Builder, fish.FishOuterClass.RandomOrBuilder>(
                  random_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          random_ = null;
        }
        return randomBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fish.RandomData)
    }

    // @@protoc_insertion_point(class_scope:fish.RandomData)
    private static final fish.FishOuterClass.RandomData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.RandomData();
    }

    public static fish.FishOuterClass.RandomData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RandomData>
        PARSER = new com.google.protobuf.AbstractParser<RandomData>() {
      @java.lang.Override
      public RandomData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RandomData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.RandomData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.Random)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>float rate = 2;</code>
     * @return The rate.
     */
    float getRate();
  }
  /**
   * <pre>
   * Random message (Lr)
   * </pre>
   *
   * Protobuf type {@code fish.Random}
   */
  public static final class Random extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.Random)
      RandomOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        Random.class.getName());
    }
    // Use Random.newBuilder() to construct.
    private Random(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Random() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_Random_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_Random_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.Random.class, fish.FishOuterClass.Random.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int RATE_FIELD_NUMBER = 2;
    private float rate_ = 0F;
    /**
     * <code>float rate = 2;</code>
     * @return The rate.
     */
    @java.lang.Override
    public float getRate() {
      return rate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (java.lang.Float.floatToRawIntBits(rate_) != 0) {
        output.writeFloat(2, rate_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (java.lang.Float.floatToRawIntBits(rate_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, rate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.Random)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.Random other = (fish.FishOuterClass.Random) obj;

      if (getId()
          != other.getId()) return false;
      if (java.lang.Float.floatToIntBits(getRate())
          != java.lang.Float.floatToIntBits(
              other.getRate())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + RATE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRate());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.Random parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Random parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Random parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Random parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Random parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Random parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Random parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Random parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.Random parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.Random parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.Random parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Random parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.Random prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Random message (Lr)
     * </pre>
     *
     * Protobuf type {@code fish.Random}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.Random)
        fish.FishOuterClass.RandomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_Random_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_Random_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.Random.class, fish.FishOuterClass.Random.Builder.class);
      }

      // Construct using fish.FishOuterClass.Random.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        rate_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_Random_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.Random getDefaultInstanceForType() {
        return fish.FishOuterClass.Random.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.Random build() {
        fish.FishOuterClass.Random result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.Random buildPartial() {
        fish.FishOuterClass.Random result = new fish.FishOuterClass.Random(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(fish.FishOuterClass.Random result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.rate_ = rate_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.Random) {
          return mergeFrom((fish.FishOuterClass.Random)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.Random other) {
        if (other == fish.FishOuterClass.Random.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (java.lang.Float.floatToRawIntBits(other.getRate()) != 0) {
          setRate(other.getRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 21: {
                rate_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private float rate_ ;
      /**
       * <code>float rate = 2;</code>
       * @return The rate.
       */
      @java.lang.Override
      public float getRate() {
        return rate_;
      }
      /**
       * <code>float rate = 2;</code>
       * @param value The rate to set.
       * @return This builder for chaining.
       */
      public Builder setRate(float value) {

        rate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float rate = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rate_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.Random)
    }

    // @@protoc_insertion_point(class_scope:fish.Random)
    private static final fish.FishOuterClass.Random DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.Random();
    }

    public static fish.FishOuterClass.Random getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Random>
        PARSER = new com.google.protobuf.AbstractParser<Random>() {
      @java.lang.Override
      public Random parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Random> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Random> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.Random getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GroupDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.GroupData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    java.util.List<fish.FishOuterClass.Fish> 
        getFishList();
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    fish.FishOuterClass.Fish getFish(int index);
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    int getFishCount();
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    java.util.List<? extends fish.FishOuterClass.FishOrBuilder> 
        getFishOrBuilderList();
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    fish.FishOuterClass.FishOrBuilder getFishOrBuilder(
        int index);

    /**
     * <code>float duration = 3;</code>
     * @return The duration.
     */
    float getDuration();

    /**
     * <code>float delay = 4;</code>
     * @return The delay.
     */
    float getDelay();
  }
  /**
   * <pre>
   * GroupData message (Ir)
   * </pre>
   *
   * Protobuf type {@code fish.GroupData}
   */
  public static final class GroupData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.GroupData)
      GroupDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        GroupData.class.getName());
    }
    // Use GroupData.newBuilder() to construct.
    private GroupData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GroupData() {
      fish_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_GroupData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_GroupData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.GroupData.class, fish.FishOuterClass.GroupData.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int FISH_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.Fish> fish_;
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.Fish> getFishList() {
      return fish_;
    }
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.FishOrBuilder> 
        getFishOrBuilderList() {
      return fish_;
    }
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    @java.lang.Override
    public int getFishCount() {
      return fish_.size();
    }
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.Fish getFish(int index) {
      return fish_.get(index);
    }
    /**
     * <code>repeated .fish.Fish fish = 2;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.FishOrBuilder getFishOrBuilder(
        int index) {
      return fish_.get(index);
    }

    public static final int DURATION_FIELD_NUMBER = 3;
    private float duration_ = 0F;
    /**
     * <code>float duration = 3;</code>
     * @return The duration.
     */
    @java.lang.Override
    public float getDuration() {
      return duration_;
    }

    public static final int DELAY_FIELD_NUMBER = 4;
    private float delay_ = 0F;
    /**
     * <code>float delay = 4;</code>
     * @return The delay.
     */
    @java.lang.Override
    public float getDelay() {
      return delay_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < fish_.size(); i++) {
        output.writeMessage(2, fish_.get(i));
      }
      if (java.lang.Float.floatToRawIntBits(duration_) != 0) {
        output.writeFloat(3, duration_);
      }
      if (java.lang.Float.floatToRawIntBits(delay_) != 0) {
        output.writeFloat(4, delay_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      for (int i = 0; i < fish_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fish_.get(i));
      }
      if (java.lang.Float.floatToRawIntBits(duration_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, duration_);
      }
      if (java.lang.Float.floatToRawIntBits(delay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, delay_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.GroupData)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.GroupData other = (fish.FishOuterClass.GroupData) obj;

      if (getId()
          != other.getId()) return false;
      if (!getFishList()
          .equals(other.getFishList())) return false;
      if (java.lang.Float.floatToIntBits(getDuration())
          != java.lang.Float.floatToIntBits(
              other.getDuration())) return false;
      if (java.lang.Float.floatToIntBits(getDelay())
          != java.lang.Float.floatToIntBits(
              other.getDelay())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (getFishCount() > 0) {
        hash = (37 * hash) + FISH_FIELD_NUMBER;
        hash = (53 * hash) + getFishList().hashCode();
      }
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDuration());
      hash = (37 * hash) + DELAY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDelay());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.GroupData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.GroupData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.GroupData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.GroupData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.GroupData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.GroupData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.GroupData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.GroupData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.GroupData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.GroupData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.GroupData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.GroupData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.GroupData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * GroupData message (Ir)
     * </pre>
     *
     * Protobuf type {@code fish.GroupData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.GroupData)
        fish.FishOuterClass.GroupDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_GroupData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_GroupData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.GroupData.class, fish.FishOuterClass.GroupData.Builder.class);
      }

      // Construct using fish.FishOuterClass.GroupData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        if (fishBuilder_ == null) {
          fish_ = java.util.Collections.emptyList();
        } else {
          fish_ = null;
          fishBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        delay_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_GroupData_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.GroupData getDefaultInstanceForType() {
        return fish.FishOuterClass.GroupData.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.GroupData build() {
        fish.FishOuterClass.GroupData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.GroupData buildPartial() {
        fish.FishOuterClass.GroupData result = new fish.FishOuterClass.GroupData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(fish.FishOuterClass.GroupData result) {
        if (fishBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            fish_ = java.util.Collections.unmodifiableList(fish_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fish_ = fish_;
        } else {
          result.fish_ = fishBuilder_.build();
        }
      }

      private void buildPartial0(fish.FishOuterClass.GroupData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.duration_ = duration_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.delay_ = delay_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.GroupData) {
          return mergeFrom((fish.FishOuterClass.GroupData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.GroupData other) {
        if (other == fish.FishOuterClass.GroupData.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (fishBuilder_ == null) {
          if (!other.fish_.isEmpty()) {
            if (fish_.isEmpty()) {
              fish_ = other.fish_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFishIsMutable();
              fish_.addAll(other.fish_);
            }
            onChanged();
          }
        } else {
          if (!other.fish_.isEmpty()) {
            if (fishBuilder_.isEmpty()) {
              fishBuilder_.dispose();
              fishBuilder_ = null;
              fish_ = other.fish_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fishBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetFishFieldBuilder() : null;
            } else {
              fishBuilder_.addAllMessages(other.fish_);
            }
          }
        }
        if (java.lang.Float.floatToRawIntBits(other.getDuration()) != 0) {
          setDuration(other.getDuration());
        }
        if (java.lang.Float.floatToRawIntBits(other.getDelay()) != 0) {
          setDelay(other.getDelay());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                fish.FishOuterClass.Fish m =
                    input.readMessage(
                        fish.FishOuterClass.Fish.parser(),
                        extensionRegistry);
                if (fishBuilder_ == null) {
                  ensureFishIsMutable();
                  fish_.add(m);
                } else {
                  fishBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 29: {
                duration_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 37: {
                delay_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<fish.FishOuterClass.Fish> fish_ =
        java.util.Collections.emptyList();
      private void ensureFishIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          fish_ = new java.util.ArrayList<fish.FishOuterClass.Fish>(fish_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.Fish, fish.FishOuterClass.Fish.Builder, fish.FishOuterClass.FishOrBuilder> fishBuilder_;

      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.Fish> getFishList() {
        if (fishBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fish_);
        } else {
          return fishBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public int getFishCount() {
        if (fishBuilder_ == null) {
          return fish_.size();
        } else {
          return fishBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public fish.FishOuterClass.Fish getFish(int index) {
        if (fishBuilder_ == null) {
          return fish_.get(index);
        } else {
          return fishBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder setFish(
          int index, fish.FishOuterClass.Fish value) {
        if (fishBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishIsMutable();
          fish_.set(index, value);
          onChanged();
        } else {
          fishBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder setFish(
          int index, fish.FishOuterClass.Fish.Builder builderForValue) {
        if (fishBuilder_ == null) {
          ensureFishIsMutable();
          fish_.set(index, builderForValue.build());
          onChanged();
        } else {
          fishBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder addFish(fish.FishOuterClass.Fish value) {
        if (fishBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishIsMutable();
          fish_.add(value);
          onChanged();
        } else {
          fishBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder addFish(
          int index, fish.FishOuterClass.Fish value) {
        if (fishBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishIsMutable();
          fish_.add(index, value);
          onChanged();
        } else {
          fishBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder addFish(
          fish.FishOuterClass.Fish.Builder builderForValue) {
        if (fishBuilder_ == null) {
          ensureFishIsMutable();
          fish_.add(builderForValue.build());
          onChanged();
        } else {
          fishBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder addFish(
          int index, fish.FishOuterClass.Fish.Builder builderForValue) {
        if (fishBuilder_ == null) {
          ensureFishIsMutable();
          fish_.add(index, builderForValue.build());
          onChanged();
        } else {
          fishBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder addAllFish(
          java.lang.Iterable<? extends fish.FishOuterClass.Fish> values) {
        if (fishBuilder_ == null) {
          ensureFishIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fish_);
          onChanged();
        } else {
          fishBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder clearFish() {
        if (fishBuilder_ == null) {
          fish_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fishBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public Builder removeFish(int index) {
        if (fishBuilder_ == null) {
          ensureFishIsMutable();
          fish_.remove(index);
          onChanged();
        } else {
          fishBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public fish.FishOuterClass.Fish.Builder getFishBuilder(
          int index) {
        return internalGetFishFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public fish.FishOuterClass.FishOrBuilder getFishOrBuilder(
          int index) {
        if (fishBuilder_ == null) {
          return fish_.get(index);  } else {
          return fishBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.FishOrBuilder> 
           getFishOrBuilderList() {
        if (fishBuilder_ != null) {
          return fishBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fish_);
        }
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public fish.FishOuterClass.Fish.Builder addFishBuilder() {
        return internalGetFishFieldBuilder().addBuilder(
            fish.FishOuterClass.Fish.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public fish.FishOuterClass.Fish.Builder addFishBuilder(
          int index) {
        return internalGetFishFieldBuilder().addBuilder(
            index, fish.FishOuterClass.Fish.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.Fish fish = 2;</code>
       */
      public java.util.List<fish.FishOuterClass.Fish.Builder> 
           getFishBuilderList() {
        return internalGetFishFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.Fish, fish.FishOuterClass.Fish.Builder, fish.FishOuterClass.FishOrBuilder> 
          internalGetFishFieldBuilder() {
        if (fishBuilder_ == null) {
          fishBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.Fish, fish.FishOuterClass.Fish.Builder, fish.FishOuterClass.FishOrBuilder>(
                  fish_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          fish_ = null;
        }
        return fishBuilder_;
      }

      private float duration_ ;
      /**
       * <code>float duration = 3;</code>
       * @return The duration.
       */
      @java.lang.Override
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>float duration = 3;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(float value) {

        duration_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float duration = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0F;
        onChanged();
        return this;
      }

      private float delay_ ;
      /**
       * <code>float delay = 4;</code>
       * @return The delay.
       */
      @java.lang.Override
      public float getDelay() {
        return delay_;
      }
      /**
       * <code>float delay = 4;</code>
       * @param value The delay to set.
       * @return This builder for chaining.
       */
      public Builder setDelay(float value) {

        delay_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float delay = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelay() {
        bitField0_ = (bitField0_ & ~0x00000008);
        delay_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.GroupData)
    }

    // @@protoc_insertion_point(class_scope:fish.GroupData)
    private static final fish.FishOuterClass.GroupData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.GroupData();
    }

    public static fish.FishOuterClass.GroupData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GroupData>
        PARSER = new com.google.protobuf.AbstractParser<GroupData>() {
      @java.lang.Override
      public GroupData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GroupData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GroupData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.GroupData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FishOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.Fish)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>int32 fish = 2;</code>
     * @return The fish.
     */
    int getFish();

    /**
     * <code>int32 path = 3;</code>
     * @return The path.
     */
    int getPath();

    /**
     * <code>float delay = 4;</code>
     * @return The delay.
     */
    float getDelay();

    /**
     * <code>bool flip = 5;</code>
     * @return The flip.
     */
    boolean getFlip();

    /**
     * <code>bool mirror = 6;</code>
     * @return The mirror.
     */
    boolean getMirror();
  }
  /**
   * <pre>
   * Fish message (Rr)
   * </pre>
   *
   * Protobuf type {@code fish.Fish}
   */
  public static final class Fish extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.Fish)
      FishOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        Fish.class.getName());
    }
    // Use Fish.newBuilder() to construct.
    private Fish(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Fish() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_Fish_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_Fish_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.Fish.class, fish.FishOuterClass.Fish.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int FISH_FIELD_NUMBER = 2;
    private int fish_ = 0;
    /**
     * <code>int32 fish = 2;</code>
     * @return The fish.
     */
    @java.lang.Override
    public int getFish() {
      return fish_;
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private int path_ = 0;
    /**
     * <code>int32 path = 3;</code>
     * @return The path.
     */
    @java.lang.Override
    public int getPath() {
      return path_;
    }

    public static final int DELAY_FIELD_NUMBER = 4;
    private float delay_ = 0F;
    /**
     * <code>float delay = 4;</code>
     * @return The delay.
     */
    @java.lang.Override
    public float getDelay() {
      return delay_;
    }

    public static final int FLIP_FIELD_NUMBER = 5;
    private boolean flip_ = false;
    /**
     * <code>bool flip = 5;</code>
     * @return The flip.
     */
    @java.lang.Override
    public boolean getFlip() {
      return flip_;
    }

    public static final int MIRROR_FIELD_NUMBER = 6;
    private boolean mirror_ = false;
    /**
     * <code>bool mirror = 6;</code>
     * @return The mirror.
     */
    @java.lang.Override
    public boolean getMirror() {
      return mirror_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (fish_ != 0) {
        output.writeInt32(2, fish_);
      }
      if (path_ != 0) {
        output.writeInt32(3, path_);
      }
      if (java.lang.Float.floatToRawIntBits(delay_) != 0) {
        output.writeFloat(4, delay_);
      }
      if (flip_ != false) {
        output.writeBool(5, flip_);
      }
      if (mirror_ != false) {
        output.writeBool(6, mirror_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (fish_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fish_);
      }
      if (path_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, path_);
      }
      if (java.lang.Float.floatToRawIntBits(delay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, delay_);
      }
      if (flip_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, flip_);
      }
      if (mirror_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, mirror_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.Fish)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.Fish other = (fish.FishOuterClass.Fish) obj;

      if (getId()
          != other.getId()) return false;
      if (getFish()
          != other.getFish()) return false;
      if (getPath()
          != other.getPath()) return false;
      if (java.lang.Float.floatToIntBits(getDelay())
          != java.lang.Float.floatToIntBits(
              other.getDelay())) return false;
      if (getFlip()
          != other.getFlip()) return false;
      if (getMirror()
          != other.getMirror()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + FISH_FIELD_NUMBER;
      hash = (53 * hash) + getFish();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath();
      hash = (37 * hash) + DELAY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDelay());
      hash = (37 * hash) + FLIP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFlip());
      hash = (37 * hash) + MIRROR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMirror());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.Fish parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Fish parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Fish parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Fish parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Fish parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Fish parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Fish parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Fish parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.Fish parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.Fish parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.Fish parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Fish parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.Fish prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Fish message (Rr)
     * </pre>
     *
     * Protobuf type {@code fish.Fish}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.Fish)
        fish.FishOuterClass.FishOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_Fish_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_Fish_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.Fish.class, fish.FishOuterClass.Fish.Builder.class);
      }

      // Construct using fish.FishOuterClass.Fish.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        fish_ = 0;
        path_ = 0;
        delay_ = 0F;
        flip_ = false;
        mirror_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_Fish_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.Fish getDefaultInstanceForType() {
        return fish.FishOuterClass.Fish.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.Fish build() {
        fish.FishOuterClass.Fish result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.Fish buildPartial() {
        fish.FishOuterClass.Fish result = new fish.FishOuterClass.Fish(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(fish.FishOuterClass.Fish result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fish_ = fish_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.path_ = path_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.delay_ = delay_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.flip_ = flip_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.mirror_ = mirror_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.Fish) {
          return mergeFrom((fish.FishOuterClass.Fish)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.Fish other) {
        if (other == fish.FishOuterClass.Fish.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getFish() != 0) {
          setFish(other.getFish());
        }
        if (other.getPath() != 0) {
          setPath(other.getPath());
        }
        if (java.lang.Float.floatToRawIntBits(other.getDelay()) != 0) {
          setDelay(other.getDelay());
        }
        if (other.getFlip() != false) {
          setFlip(other.getFlip());
        }
        if (other.getMirror() != false) {
          setMirror(other.getMirror());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                fish_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                path_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 37: {
                delay_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 40: {
                flip_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                mirror_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int fish_ ;
      /**
       * <code>int32 fish = 2;</code>
       * @return The fish.
       */
      @java.lang.Override
      public int getFish() {
        return fish_;
      }
      /**
       * <code>int32 fish = 2;</code>
       * @param value The fish to set.
       * @return This builder for chaining.
       */
      public Builder setFish(int value) {

        fish_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fish = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFish() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fish_ = 0;
        onChanged();
        return this;
      }

      private int path_ ;
      /**
       * <code>int32 path = 3;</code>
       * @return The path.
       */
      @java.lang.Override
      public int getPath() {
        return path_;
      }
      /**
       * <code>int32 path = 3;</code>
       * @param value The path to set.
       * @return This builder for chaining.
       */
      public Builder setPath(int value) {

        path_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 path = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000004);
        path_ = 0;
        onChanged();
        return this;
      }

      private float delay_ ;
      /**
       * <code>float delay = 4;</code>
       * @return The delay.
       */
      @java.lang.Override
      public float getDelay() {
        return delay_;
      }
      /**
       * <code>float delay = 4;</code>
       * @param value The delay to set.
       * @return This builder for chaining.
       */
      public Builder setDelay(float value) {

        delay_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float delay = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelay() {
        bitField0_ = (bitField0_ & ~0x00000008);
        delay_ = 0F;
        onChanged();
        return this;
      }

      private boolean flip_ ;
      /**
       * <code>bool flip = 5;</code>
       * @return The flip.
       */
      @java.lang.Override
      public boolean getFlip() {
        return flip_;
      }
      /**
       * <code>bool flip = 5;</code>
       * @param value The flip to set.
       * @return This builder for chaining.
       */
      public Builder setFlip(boolean value) {

        flip_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>bool flip = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlip() {
        bitField0_ = (bitField0_ & ~0x00000010);
        flip_ = false;
        onChanged();
        return this;
      }

      private boolean mirror_ ;
      /**
       * <code>bool mirror = 6;</code>
       * @return The mirror.
       */
      @java.lang.Override
      public boolean getMirror() {
        return mirror_;
      }
      /**
       * <code>bool mirror = 6;</code>
       * @param value The mirror to set.
       * @return This builder for chaining.
       */
      public Builder setMirror(boolean value) {

        mirror_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>bool mirror = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMirror() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mirror_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.Fish)
    }

    // @@protoc_insertion_point(class_scope:fish.Fish)
    private static final fish.FishOuterClass.Fish DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.Fish();
    }

    public static fish.FishOuterClass.Fish getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Fish>
        PARSER = new com.google.protobuf.AbstractParser<Fish>() {
      @java.lang.Override
      public Fish parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Fish> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Fish> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.Fish getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PathDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.PathData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>float duration = 2;</code>
     * @return The duration.
     */
    float getDuration();

    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    java.util.List<fish.FishOuterClass.Point> 
        getPointList();
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    fish.FishOuterClass.Point getPoint(int index);
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    int getPointCount();
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    java.util.List<? extends fish.FishOuterClass.PointOrBuilder> 
        getPointOrBuilderList();
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    fish.FishOuterClass.PointOrBuilder getPointOrBuilder(
        int index);
  }
  /**
   * <pre>
   * PathData message (Dr)
   * </pre>
   *
   * Protobuf type {@code fish.PathData}
   */
  public static final class PathData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.PathData)
      PathDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        PathData.class.getName());
    }
    // Use PathData.newBuilder() to construct.
    private PathData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PathData() {
      point_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_PathData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_PathData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.PathData.class, fish.FishOuterClass.PathData.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private float duration_ = 0F;
    /**
     * <code>float duration = 2;</code>
     * @return The duration.
     */
    @java.lang.Override
    public float getDuration() {
      return duration_;
    }

    public static final int POINT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<fish.FishOuterClass.Point> point_;
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    @java.lang.Override
    public java.util.List<fish.FishOuterClass.Point> getPointList() {
      return point_;
    }
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends fish.FishOuterClass.PointOrBuilder> 
        getPointOrBuilderList() {
      return point_;
    }
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    @java.lang.Override
    public int getPointCount() {
      return point_.size();
    }
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.Point getPoint(int index) {
      return point_.get(index);
    }
    /**
     * <code>repeated .fish.Point point = 3;</code>
     */
    @java.lang.Override
    public fish.FishOuterClass.PointOrBuilder getPointOrBuilder(
        int index) {
      return point_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (java.lang.Float.floatToRawIntBits(duration_) != 0) {
        output.writeFloat(2, duration_);
      }
      for (int i = 0; i < point_.size(); i++) {
        output.writeMessage(3, point_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (java.lang.Float.floatToRawIntBits(duration_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, duration_);
      }
      for (int i = 0; i < point_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, point_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.PathData)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.PathData other = (fish.FishOuterClass.PathData) obj;

      if (getId()
          != other.getId()) return false;
      if (java.lang.Float.floatToIntBits(getDuration())
          != java.lang.Float.floatToIntBits(
              other.getDuration())) return false;
      if (!getPointList()
          .equals(other.getPointList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDuration());
      if (getPointCount() > 0) {
        hash = (37 * hash) + POINT_FIELD_NUMBER;
        hash = (53 * hash) + getPointList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.PathData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.PathData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.PathData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.PathData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.PathData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.PathData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.PathData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.PathData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.PathData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.PathData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.PathData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.PathData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.PathData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PathData message (Dr)
     * </pre>
     *
     * Protobuf type {@code fish.PathData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.PathData)
        fish.FishOuterClass.PathDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_PathData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_PathData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.PathData.class, fish.FishOuterClass.PathData.Builder.class);
      }

      // Construct using fish.FishOuterClass.PathData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        duration_ = 0F;
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
        } else {
          point_ = null;
          pointBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_PathData_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.PathData getDefaultInstanceForType() {
        return fish.FishOuterClass.PathData.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.PathData build() {
        fish.FishOuterClass.PathData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.PathData buildPartial() {
        fish.FishOuterClass.PathData result = new fish.FishOuterClass.PathData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(fish.FishOuterClass.PathData result) {
        if (pointBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            point_ = java.util.Collections.unmodifiableList(point_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.point_ = point_;
        } else {
          result.point_ = pointBuilder_.build();
        }
      }

      private void buildPartial0(fish.FishOuterClass.PathData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.duration_ = duration_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.PathData) {
          return mergeFrom((fish.FishOuterClass.PathData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.PathData other) {
        if (other == fish.FishOuterClass.PathData.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (java.lang.Float.floatToRawIntBits(other.getDuration()) != 0) {
          setDuration(other.getDuration());
        }
        if (pointBuilder_ == null) {
          if (!other.point_.isEmpty()) {
            if (point_.isEmpty()) {
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePointIsMutable();
              point_.addAll(other.point_);
            }
            onChanged();
          }
        } else {
          if (!other.point_.isEmpty()) {
            if (pointBuilder_.isEmpty()) {
              pointBuilder_.dispose();
              pointBuilder_ = null;
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000004);
              pointBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetPointFieldBuilder() : null;
            } else {
              pointBuilder_.addAllMessages(other.point_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 21: {
                duration_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 26: {
                fish.FishOuterClass.Point m =
                    input.readMessage(
                        fish.FishOuterClass.Point.parser(),
                        extensionRegistry);
                if (pointBuilder_ == null) {
                  ensurePointIsMutable();
                  point_.add(m);
                } else {
                  pointBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private float duration_ ;
      /**
       * <code>float duration = 2;</code>
       * @return The duration.
       */
      @java.lang.Override
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>float duration = 2;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(float value) {

        duration_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float duration = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<fish.FishOuterClass.Point> point_ =
        java.util.Collections.emptyList();
      private void ensurePointIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          point_ = new java.util.ArrayList<fish.FishOuterClass.Point>(point_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.Point, fish.FishOuterClass.Point.Builder, fish.FishOuterClass.PointOrBuilder> pointBuilder_;

      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public java.util.List<fish.FishOuterClass.Point> getPointList() {
        if (pointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(point_);
        } else {
          return pointBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public int getPointCount() {
        if (pointBuilder_ == null) {
          return point_.size();
        } else {
          return pointBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public fish.FishOuterClass.Point getPoint(int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);
        } else {
          return pointBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder setPoint(
          int index, fish.FishOuterClass.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.set(index, value);
          onChanged();
        } else {
          pointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder setPoint(
          int index, fish.FishOuterClass.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder addPoint(fish.FishOuterClass.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(value);
          onChanged();
        } else {
          pointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder addPoint(
          int index, fish.FishOuterClass.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(index, value);
          onChanged();
        } else {
          pointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder addPoint(
          fish.FishOuterClass.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder addPoint(
          int index, fish.FishOuterClass.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder addAllPoint(
          java.lang.Iterable<? extends fish.FishOuterClass.Point> values) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, point_);
          onChanged();
        } else {
          pointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          pointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public Builder removePoint(int index) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.remove(index);
          onChanged();
        } else {
          pointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public fish.FishOuterClass.Point.Builder getPointBuilder(
          int index) {
        return internalGetPointFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public fish.FishOuterClass.PointOrBuilder getPointOrBuilder(
          int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);  } else {
          return pointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public java.util.List<? extends fish.FishOuterClass.PointOrBuilder> 
           getPointOrBuilderList() {
        if (pointBuilder_ != null) {
          return pointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(point_);
        }
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public fish.FishOuterClass.Point.Builder addPointBuilder() {
        return internalGetPointFieldBuilder().addBuilder(
            fish.FishOuterClass.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public fish.FishOuterClass.Point.Builder addPointBuilder(
          int index) {
        return internalGetPointFieldBuilder().addBuilder(
            index, fish.FishOuterClass.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .fish.Point point = 3;</code>
       */
      public java.util.List<fish.FishOuterClass.Point.Builder> 
           getPointBuilderList() {
        return internalGetPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          fish.FishOuterClass.Point, fish.FishOuterClass.Point.Builder, fish.FishOuterClass.PointOrBuilder> 
          internalGetPointFieldBuilder() {
        if (pointBuilder_ == null) {
          pointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              fish.FishOuterClass.Point, fish.FishOuterClass.Point.Builder, fish.FishOuterClass.PointOrBuilder>(
                  point_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          point_ = null;
        }
        return pointBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fish.PathData)
    }

    // @@protoc_insertion_point(class_scope:fish.PathData)
    private static final fish.FishOuterClass.PathData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.PathData();
    }

    public static fish.FishOuterClass.PathData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PathData>
        PARSER = new com.google.protobuf.AbstractParser<PathData>() {
      @java.lang.Override
      public PathData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PathData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PathData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.PathData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fish.Point)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float duration = 3;</code>
     * @return The duration.
     */
    float getDuration();

    /**
     * <code>float delay = 4;</code>
     * @return The delay.
     */
    float getDelay();

    /**
     * <code>bool isSpline = 5;</code>
     * @return The isSpline.
     */
    boolean getIsSpline();

    /**
     * <code>float distance = 6;</code>
     * @return The distance.
     */
    float getDistance();
  }
  /**
   * <pre>
   * Point message (Ar)
   * </pre>
   *
   * Protobuf type {@code fish.Point}
   */
  public static final class Point extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fish.Point)
      PointOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        Point.class.getName());
    }
    // Use Point.newBuilder() to construct.
    private Point(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Point() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fish.FishOuterClass.internal_static_fish_Point_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fish.FishOuterClass.internal_static_fish_Point_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fish.FishOuterClass.Point.class, fish.FishOuterClass.Point.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_ = 0F;
    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_ = 0F;
    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int DURATION_FIELD_NUMBER = 3;
    private float duration_ = 0F;
    /**
     * <code>float duration = 3;</code>
     * @return The duration.
     */
    @java.lang.Override
    public float getDuration() {
      return duration_;
    }

    public static final int DELAY_FIELD_NUMBER = 4;
    private float delay_ = 0F;
    /**
     * <code>float delay = 4;</code>
     * @return The delay.
     */
    @java.lang.Override
    public float getDelay() {
      return delay_;
    }

    public static final int ISSPLINE_FIELD_NUMBER = 5;
    private boolean isSpline_ = false;
    /**
     * <code>bool isSpline = 5;</code>
     * @return The isSpline.
     */
    @java.lang.Override
    public boolean getIsSpline() {
      return isSpline_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 6;
    private float distance_ = 0F;
    /**
     * <code>float distance = 6;</code>
     * @return The distance.
     */
    @java.lang.Override
    public float getDistance() {
      return distance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        output.writeFloat(1, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        output.writeFloat(2, y_);
      }
      if (java.lang.Float.floatToRawIntBits(duration_) != 0) {
        output.writeFloat(3, duration_);
      }
      if (java.lang.Float.floatToRawIntBits(delay_) != 0) {
        output.writeFloat(4, delay_);
      }
      if (isSpline_ != false) {
        output.writeBool(5, isSpline_);
      }
      if (java.lang.Float.floatToRawIntBits(distance_) != 0) {
        output.writeFloat(6, distance_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (java.lang.Float.floatToRawIntBits(duration_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, duration_);
      }
      if (java.lang.Float.floatToRawIntBits(delay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, delay_);
      }
      if (isSpline_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isSpline_);
      }
      if (java.lang.Float.floatToRawIntBits(distance_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, distance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof fish.FishOuterClass.Point)) {
        return super.equals(obj);
      }
      fish.FishOuterClass.Point other = (fish.FishOuterClass.Point) obj;

      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getDuration())
          != java.lang.Float.floatToIntBits(
              other.getDuration())) return false;
      if (java.lang.Float.floatToIntBits(getDelay())
          != java.lang.Float.floatToIntBits(
              other.getDelay())) return false;
      if (getIsSpline()
          != other.getIsSpline()) return false;
      if (java.lang.Float.floatToIntBits(getDistance())
          != java.lang.Float.floatToIntBits(
              other.getDistance())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDuration());
      hash = (37 * hash) + DELAY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDelay());
      hash = (37 * hash) + ISSPLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSpline());
      hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDistance());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static fish.FishOuterClass.Point parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Point parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fish.FishOuterClass.Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fish.FishOuterClass.Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static fish.FishOuterClass.Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static fish.FishOuterClass.Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static fish.FishOuterClass.Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static fish.FishOuterClass.Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fish.FishOuterClass.Point prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Point message (Ar)
     * </pre>
     *
     * Protobuf type {@code fish.Point}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fish.Point)
        fish.FishOuterClass.PointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fish.FishOuterClass.internal_static_fish_Point_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fish.FishOuterClass.internal_static_fish_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fish.FishOuterClass.Point.class, fish.FishOuterClass.Point.Builder.class);
      }

      // Construct using fish.FishOuterClass.Point.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        x_ = 0F;
        y_ = 0F;
        duration_ = 0F;
        delay_ = 0F;
        isSpline_ = false;
        distance_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fish.FishOuterClass.internal_static_fish_Point_descriptor;
      }

      @java.lang.Override
      public fish.FishOuterClass.Point getDefaultInstanceForType() {
        return fish.FishOuterClass.Point.getDefaultInstance();
      }

      @java.lang.Override
      public fish.FishOuterClass.Point build() {
        fish.FishOuterClass.Point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public fish.FishOuterClass.Point buildPartial() {
        fish.FishOuterClass.Point result = new fish.FishOuterClass.Point(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(fish.FishOuterClass.Point result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.x_ = x_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.y_ = y_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.duration_ = duration_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.delay_ = delay_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.isSpline_ = isSpline_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.distance_ = distance_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fish.FishOuterClass.Point) {
          return mergeFrom((fish.FishOuterClass.Point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fish.FishOuterClass.Point other) {
        if (other == fish.FishOuterClass.Point.getDefaultInstance()) return this;
        if (java.lang.Float.floatToRawIntBits(other.getX()) != 0) {
          setX(other.getX());
        }
        if (java.lang.Float.floatToRawIntBits(other.getY()) != 0) {
          setY(other.getY());
        }
        if (java.lang.Float.floatToRawIntBits(other.getDuration()) != 0) {
          setDuration(other.getDuration());
        }
        if (java.lang.Float.floatToRawIntBits(other.getDelay()) != 0) {
          setDelay(other.getDelay());
        }
        if (other.getIsSpline() != false) {
          setIsSpline(other.getIsSpline());
        }
        if (java.lang.Float.floatToRawIntBits(other.getDistance()) != 0) {
          setDistance(other.getDistance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                x_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                y_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 29: {
                duration_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 37: {
                delay_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 40: {
                isSpline_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 53: {
                distance_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {

        x_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {

        y_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      private float duration_ ;
      /**
       * <code>float duration = 3;</code>
       * @return The duration.
       */
      @java.lang.Override
      public float getDuration() {
        return duration_;
      }
      /**
       * <code>float duration = 3;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(float value) {

        duration_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float duration = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0F;
        onChanged();
        return this;
      }

      private float delay_ ;
      /**
       * <code>float delay = 4;</code>
       * @return The delay.
       */
      @java.lang.Override
      public float getDelay() {
        return delay_;
      }
      /**
       * <code>float delay = 4;</code>
       * @param value The delay to set.
       * @return This builder for chaining.
       */
      public Builder setDelay(float value) {

        delay_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float delay = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelay() {
        bitField0_ = (bitField0_ & ~0x00000008);
        delay_ = 0F;
        onChanged();
        return this;
      }

      private boolean isSpline_ ;
      /**
       * <code>bool isSpline = 5;</code>
       * @return The isSpline.
       */
      @java.lang.Override
      public boolean getIsSpline() {
        return isSpline_;
      }
      /**
       * <code>bool isSpline = 5;</code>
       * @param value The isSpline to set.
       * @return This builder for chaining.
       */
      public Builder setIsSpline(boolean value) {

        isSpline_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>bool isSpline = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSpline() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isSpline_ = false;
        onChanged();
        return this;
      }

      private float distance_ ;
      /**
       * <code>float distance = 6;</code>
       * @return The distance.
       */
      @java.lang.Override
      public float getDistance() {
        return distance_;
      }
      /**
       * <code>float distance = 6;</code>
       * @param value The distance to set.
       * @return This builder for chaining.
       */
      public Builder setDistance(float value) {

        distance_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>float distance = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000020);
        distance_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fish.Point)
    }

    // @@protoc_insertion_point(class_scope:fish.Point)
    private static final fish.FishOuterClass.Point DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new fish.FishOuterClass.Point();
    }

    public static fish.FishOuterClass.Point getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Point>
        PARSER = new com.google.protobuf.AbstractParser<Point>() {
      @java.lang.Override
      public Point parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Point> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Point> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public fish.FishOuterClass.Point getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_Script_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_Script_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_MainData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_MainData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_MainDataSub_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_MainDataSub_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_RandomData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_RandomData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_Random_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_Random_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_GroupData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_GroupData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_Fish_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_Fish_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_PathData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_PathData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fish_Point_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nFish.proto\022\004fish\"\227\001\n\006Script\022\034\n\004main\030\001 " +
      "\003(\0132\016.fish.MainData\022 \n\006random\030\002 \003(\0132\020.fi" +
      "sh.RandomData\022\036\n\005group\030\003 \003(\0132\017.fish.Grou" +
      "pData\022\034\n\004path\030\004 \003(\0132\016.fish.PathData\022\017\n\007v" +
      "ersion\030\005 \001(\003\":\n\010MainData\022\n\n\002no\030\001 \001(\005\022\"\n\007" +
      "randoms\030\002 \003(\0132\021.fish.MainDataSub\"+\n\013Main" +
      "DataSub\022\014\n\004name\030\001 \001(\t\022\016\n\006random\030\002 \003(\005\"6\n" +
      "\nRandomData\022\n\n\002id\030\001 \001(\005\022\034\n\006random\030\002 \003(\0132" +
      "\014.fish.Random\"\"\n\006Random\022\n\n\002id\030\001 \001(\005\022\014\n\004r" +
      "ate\030\002 \001(\002\"R\n\tGroupData\022\n\n\002id\030\001 \001(\005\022\030\n\004fi" +
      "sh\030\002 \003(\0132\n.fish.Fish\022\020\n\010duration\030\003 \001(\002\022\r" +
      "\n\005delay\030\004 \001(\002\"[\n\004Fish\022\n\n\002id\030\001 \001(\005\022\014\n\004fis" +
      "h\030\002 \001(\005\022\014\n\004path\030\003 \001(\005\022\r\n\005delay\030\004 \001(\002\022\014\n\004" +
      "flip\030\005 \001(\010\022\016\n\006mirror\030\006 \001(\010\"D\n\010PathData\022\n" +
      "\n\002id\030\001 \001(\005\022\020\n\010duration\030\002 \001(\002\022\032\n\005point\030\003 " +
      "\003(\0132\013.fish.Point\"b\n\005Point\022\t\n\001x\030\001 \001(\002\022\t\n\001" +
      "y\030\002 \001(\002\022\020\n\010duration\030\003 \001(\002\022\r\n\005delay\030\004 \001(\002" +
      "\022\020\n\010isSpline\030\005 \001(\010\022\020\n\010distance\030\006 \001(\002b\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_fish_Script_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fish_Script_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_Script_descriptor,
        new java.lang.String[] { "Main", "Random", "Group", "Path", "Version", });
    internal_static_fish_MainData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_fish_MainData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_MainData_descriptor,
        new java.lang.String[] { "No", "Randoms", });
    internal_static_fish_MainDataSub_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_fish_MainDataSub_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_MainDataSub_descriptor,
        new java.lang.String[] { "Name", "Random", });
    internal_static_fish_RandomData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_fish_RandomData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_RandomData_descriptor,
        new java.lang.String[] { "Id", "Random", });
    internal_static_fish_Random_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_fish_Random_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_Random_descriptor,
        new java.lang.String[] { "Id", "Rate", });
    internal_static_fish_GroupData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_fish_GroupData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_GroupData_descriptor,
        new java.lang.String[] { "Id", "Fish", "Duration", "Delay", });
    internal_static_fish_Fish_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_fish_Fish_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_Fish_descriptor,
        new java.lang.String[] { "Id", "Fish", "Path", "Delay", "Flip", "Mirror", });
    internal_static_fish_PathData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_fish_PathData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_PathData_descriptor,
        new java.lang.String[] { "Id", "Duration", "Point", });
    internal_static_fish_Point_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_fish_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fish_Point_descriptor,
        new java.lang.String[] { "X", "Y", "Duration", "Delay", "IsSpline", "Distance", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
