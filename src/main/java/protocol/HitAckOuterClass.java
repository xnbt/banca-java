// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: HitAck.proto
// Protobuf Java Version: 4.30.0

package protocol;

public final class HitAckOuterClass {
  private HitAckOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 0,
      /* suffix= */ "",
      HitAckOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HitAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.HitAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 seat = 1;</code>
     * @return The seat.
     */
    int getSeat();

    /**
     * <code>uint32 bulletId = 2;</code>
     * @return The bulletId.
     */
    int getBulletId();

    /**
     * <code>.protocol.BulletType bulletType = 3;</code>
     * @return The enum numeric value on the wire for bulletType.
     */
    int getBulletTypeValue();
    /**
     * <code>.protocol.BulletType bulletType = 3;</code>
     * @return The bulletType.
     */
    protocol.BulletTypeOuterClass.BulletType getBulletType();

    /**
     * <code>double bet = 4;</code>
     * @return The bet.
     */
    double getBet();

    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    java.util.List<protocol.HitAckOuterClass.HitAck.Fish> 
        getDeadList();
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    protocol.HitAckOuterClass.HitAck.Fish getDead(int index);
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    int getDeadCount();
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    java.util.List<? extends protocol.HitAckOuterClass.HitAck.FishOrBuilder> 
        getDeadOrBuilderList();
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    protocol.HitAckOuterClass.HitAck.FishOrBuilder getDeadOrBuilder(
        int index);

    /**
     * <code>double remain = 6;</code>
     * @return The remain.
     */
    double getRemain();

    /**
     * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
     * @return Whether the jackpot field is set.
     */
    boolean hasJackpot();
    /**
     * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
     * @return The jackpot.
     */
    protocol.HitAckOuterClass.HitAck.Jackpot getJackpot();
    /**
     * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
     */
    protocol.HitAckOuterClass.HitAck.JackpotOrBuilder getJackpotOrBuilder();

    /**
     * <code>double bonus = 9;</code>
     * @return The bonus.
     */
    double getBonus();
  }
  /**
   * Protobuf type {@code protocol.HitAck}
   */
  public static final class HitAck extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol.HitAck)
      HitAckOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "",
        HitAck.class.getName());
    }
    // Use HitAck.newBuilder() to construct.
    private HitAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private HitAck() {
      bulletType_ = 0;
      dead_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.HitAckOuterClass.internal_static_protocol_HitAck_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.HitAckOuterClass.internal_static_protocol_HitAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.HitAckOuterClass.HitAck.class, protocol.HitAckOuterClass.HitAck.Builder.class);
    }

    /**
     * Protobuf enum {@code protocol.HitAck.JackpotType}
     */
    public enum JackpotType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Add other jackpot types as needed
       * </pre>
       *
       * <code>None = 0;</code>
       */
      None(0),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 30,
          /* patch= */ 0,
          /* suffix= */ "",
          JackpotType.class.getName());
      }
      /**
       * <pre>
       * Add other jackpot types as needed
       * </pre>
       *
       * <code>None = 0;</code>
       */
      public static final int None_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static JackpotType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static JackpotType forNumber(int value) {
        switch (value) {
          case 0: return None;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<JackpotType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          JackpotType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<JackpotType>() {
              public JackpotType findValueByNumber(int number) {
                return JackpotType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return protocol.HitAckOuterClass.HitAck.getDescriptor().getEnumTypes().get(0);
      }

      private static final JackpotType[] VALUES = values();

      public static JackpotType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private JackpotType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.HitAck.JackpotType)
    }

    public interface FishOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol.HitAck.Fish)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>double coin = 2;</code>
       * @return The coin.
       */
      double getCoin();
    }
    /**
     * Protobuf type {@code protocol.HitAck.Fish}
     */
    public static final class Fish extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol.HitAck.Fish)
        FishOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 30,
          /* patch= */ 0,
          /* suffix= */ "",
          Fish.class.getName());
      }
      // Use Fish.newBuilder() to construct.
      private Fish(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Fish() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Fish_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Fish_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.HitAckOuterClass.HitAck.Fish.class, protocol.HitAckOuterClass.HitAck.Fish.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private int id_ = 0;
      /**
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int COIN_FIELD_NUMBER = 2;
      private double coin_ = 0D;
      /**
       * <code>double coin = 2;</code>
       * @return The coin.
       */
      @java.lang.Override
      public double getCoin() {
        return coin_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != 0) {
          output.writeUInt32(1, id_);
        }
        if (java.lang.Double.doubleToRawLongBits(coin_) != 0) {
          output.writeDouble(2, coin_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (java.lang.Double.doubleToRawLongBits(coin_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, coin_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof protocol.HitAckOuterClass.HitAck.Fish)) {
          return super.equals(obj);
        }
        protocol.HitAckOuterClass.HitAck.Fish other = (protocol.HitAckOuterClass.HitAck.Fish) obj;

        if (getId()
            != other.getId()) return false;
        if (java.lang.Double.doubleToLongBits(getCoin())
            != java.lang.Double.doubleToLongBits(
                other.getCoin())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
        hash = (37 * hash) + COIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCoin()));
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static protocol.HitAckOuterClass.HitAck.Fish parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static protocol.HitAckOuterClass.HitAck.Fish parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static protocol.HitAckOuterClass.HitAck.Fish parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol.HitAckOuterClass.HitAck.Fish prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol.HitAck.Fish}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol.HitAck.Fish)
          protocol.HitAckOuterClass.HitAck.FishOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Fish_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Fish_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol.HitAckOuterClass.HitAck.Fish.class, protocol.HitAckOuterClass.HitAck.Fish.Builder.class);
        }

        // Construct using protocol.HitAckOuterClass.HitAck.Fish.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          id_ = 0;
          coin_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Fish_descriptor;
        }

        @java.lang.Override
        public protocol.HitAckOuterClass.HitAck.Fish getDefaultInstanceForType() {
          return protocol.HitAckOuterClass.HitAck.Fish.getDefaultInstance();
        }

        @java.lang.Override
        public protocol.HitAckOuterClass.HitAck.Fish build() {
          protocol.HitAckOuterClass.HitAck.Fish result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public protocol.HitAckOuterClass.HitAck.Fish buildPartial() {
          protocol.HitAckOuterClass.HitAck.Fish result = new protocol.HitAckOuterClass.HitAck.Fish(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(protocol.HitAckOuterClass.HitAck.Fish result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.coin_ = coin_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol.HitAckOuterClass.HitAck.Fish) {
            return mergeFrom((protocol.HitAckOuterClass.HitAck.Fish)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol.HitAckOuterClass.HitAck.Fish other) {
          if (other == protocol.HitAckOuterClass.HitAck.Fish.getDefaultInstance()) return this;
          if (other.getId() != 0) {
            setId(other.getId());
          }
          if (java.lang.Double.doubleToRawLongBits(other.getCoin()) != 0) {
            setCoin(other.getCoin());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  id_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 17: {
                  coin_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>uint32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <code>uint32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {

          id_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private double coin_ ;
        /**
         * <code>double coin = 2;</code>
         * @return The coin.
         */
        @java.lang.Override
        public double getCoin() {
          return coin_;
        }
        /**
         * <code>double coin = 2;</code>
         * @param value The coin to set.
         * @return This builder for chaining.
         */
        public Builder setCoin(double value) {

          coin_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>double coin = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCoin() {
          bitField0_ = (bitField0_ & ~0x00000002);
          coin_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol.HitAck.Fish)
      }

      // @@protoc_insertion_point(class_scope:protocol.HitAck.Fish)
      private static final protocol.HitAckOuterClass.HitAck.Fish DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol.HitAckOuterClass.HitAck.Fish();
      }

      public static protocol.HitAckOuterClass.HitAck.Fish getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Fish>
          PARSER = new com.google.protobuf.AbstractParser<Fish>() {
        @java.lang.Override
        public Fish parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Fish> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Fish> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public protocol.HitAckOuterClass.HitAck.Fish getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface JackpotOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol.HitAck.Jackpot)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.protocol.HitAck.JackpotType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.protocol.HitAck.JackpotType type = 1;</code>
       * @return The type.
       */
      protocol.HitAckOuterClass.HitAck.JackpotType getType();

      /**
       * <code>double coin = 2;</code>
       * @return The coin.
       */
      double getCoin();
    }
    /**
     * Protobuf type {@code protocol.HitAck.Jackpot}
     */
    public static final class Jackpot extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol.HitAck.Jackpot)
        JackpotOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 30,
          /* patch= */ 0,
          /* suffix= */ "",
          Jackpot.class.getName());
      }
      // Use Jackpot.newBuilder() to construct.
      private Jackpot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Jackpot() {
        type_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Jackpot_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Jackpot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.HitAckOuterClass.HitAck.Jackpot.class, protocol.HitAckOuterClass.HitAck.Jackpot.Builder.class);
      }

      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_ = 0;
      /**
       * <code>.protocol.HitAck.JackpotType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.protocol.HitAck.JackpotType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override public protocol.HitAckOuterClass.HitAck.JackpotType getType() {
        protocol.HitAckOuterClass.HitAck.JackpotType result = protocol.HitAckOuterClass.HitAck.JackpotType.forNumber(type_);
        return result == null ? protocol.HitAckOuterClass.HitAck.JackpotType.UNRECOGNIZED : result;
      }

      public static final int COIN_FIELD_NUMBER = 2;
      private double coin_ = 0D;
      /**
       * <code>double coin = 2;</code>
       * @return The coin.
       */
      @java.lang.Override
      public double getCoin() {
        return coin_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (type_ != protocol.HitAckOuterClass.HitAck.JackpotType.None.getNumber()) {
          output.writeEnum(1, type_);
        }
        if (java.lang.Double.doubleToRawLongBits(coin_) != 0) {
          output.writeDouble(2, coin_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (type_ != protocol.HitAckOuterClass.HitAck.JackpotType.None.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (java.lang.Double.doubleToRawLongBits(coin_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, coin_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof protocol.HitAckOuterClass.HitAck.Jackpot)) {
          return super.equals(obj);
        }
        protocol.HitAckOuterClass.HitAck.Jackpot other = (protocol.HitAckOuterClass.HitAck.Jackpot) obj;

        if (type_ != other.type_) return false;
        if (java.lang.Double.doubleToLongBits(getCoin())
            != java.lang.Double.doubleToLongBits(
                other.getCoin())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (37 * hash) + COIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCoin()));
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static protocol.HitAckOuterClass.HitAck.Jackpot parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static protocol.HitAckOuterClass.HitAck.Jackpot parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static protocol.HitAckOuterClass.HitAck.Jackpot parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol.HitAckOuterClass.HitAck.Jackpot prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol.HitAck.Jackpot}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol.HitAck.Jackpot)
          protocol.HitAckOuterClass.HitAck.JackpotOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Jackpot_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Jackpot_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol.HitAckOuterClass.HitAck.Jackpot.class, protocol.HitAckOuterClass.HitAck.Jackpot.Builder.class);
        }

        // Construct using protocol.HitAckOuterClass.HitAck.Jackpot.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          type_ = 0;
          coin_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol.HitAckOuterClass.internal_static_protocol_HitAck_Jackpot_descriptor;
        }

        @java.lang.Override
        public protocol.HitAckOuterClass.HitAck.Jackpot getDefaultInstanceForType() {
          return protocol.HitAckOuterClass.HitAck.Jackpot.getDefaultInstance();
        }

        @java.lang.Override
        public protocol.HitAckOuterClass.HitAck.Jackpot build() {
          protocol.HitAckOuterClass.HitAck.Jackpot result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public protocol.HitAckOuterClass.HitAck.Jackpot buildPartial() {
          protocol.HitAckOuterClass.HitAck.Jackpot result = new protocol.HitAckOuterClass.HitAck.Jackpot(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(protocol.HitAckOuterClass.HitAck.Jackpot result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.type_ = type_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.coin_ = coin_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol.HitAckOuterClass.HitAck.Jackpot) {
            return mergeFrom((protocol.HitAckOuterClass.HitAck.Jackpot)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol.HitAckOuterClass.HitAck.Jackpot other) {
          if (other == protocol.HitAckOuterClass.HitAck.Jackpot.getDefaultInstance()) return this;
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (java.lang.Double.doubleToRawLongBits(other.getCoin()) != 0) {
            setCoin(other.getCoin());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  type_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 17: {
                  coin_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int type_ = 0;
        /**
         * <code>.protocol.HitAck.JackpotType type = 1;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.protocol.HitAck.JackpotType type = 1;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.protocol.HitAck.JackpotType type = 1;</code>
         * @return The type.
         */
        @java.lang.Override
        public protocol.HitAckOuterClass.HitAck.JackpotType getType() {
          protocol.HitAckOuterClass.HitAck.JackpotType result = protocol.HitAckOuterClass.HitAck.JackpotType.forNumber(type_);
          return result == null ? protocol.HitAckOuterClass.HitAck.JackpotType.UNRECOGNIZED : result;
        }
        /**
         * <code>.protocol.HitAck.JackpotType type = 1;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(protocol.HitAckOuterClass.HitAck.JackpotType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.protocol.HitAck.JackpotType type = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = 0;
          onChanged();
          return this;
        }

        private double coin_ ;
        /**
         * <code>double coin = 2;</code>
         * @return The coin.
         */
        @java.lang.Override
        public double getCoin() {
          return coin_;
        }
        /**
         * <code>double coin = 2;</code>
         * @param value The coin to set.
         * @return This builder for chaining.
         */
        public Builder setCoin(double value) {

          coin_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>double coin = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCoin() {
          bitField0_ = (bitField0_ & ~0x00000002);
          coin_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol.HitAck.Jackpot)
      }

      // @@protoc_insertion_point(class_scope:protocol.HitAck.Jackpot)
      private static final protocol.HitAckOuterClass.HitAck.Jackpot DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol.HitAckOuterClass.HitAck.Jackpot();
      }

      public static protocol.HitAckOuterClass.HitAck.Jackpot getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Jackpot>
          PARSER = new com.google.protobuf.AbstractParser<Jackpot>() {
        @java.lang.Override
        public Jackpot parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Jackpot> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Jackpot> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public protocol.HitAckOuterClass.HitAck.Jackpot getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int SEAT_FIELD_NUMBER = 1;
    private int seat_ = 0;
    /**
     * <code>uint32 seat = 1;</code>
     * @return The seat.
     */
    @java.lang.Override
    public int getSeat() {
      return seat_;
    }

    public static final int BULLETID_FIELD_NUMBER = 2;
    private int bulletId_ = 0;
    /**
     * <code>uint32 bulletId = 2;</code>
     * @return The bulletId.
     */
    @java.lang.Override
    public int getBulletId() {
      return bulletId_;
    }

    public static final int BULLETTYPE_FIELD_NUMBER = 3;
    private int bulletType_ = 0;
    /**
     * <code>.protocol.BulletType bulletType = 3;</code>
     * @return The enum numeric value on the wire for bulletType.
     */
    @java.lang.Override public int getBulletTypeValue() {
      return bulletType_;
    }
    /**
     * <code>.protocol.BulletType bulletType = 3;</code>
     * @return The bulletType.
     */
    @java.lang.Override public protocol.BulletTypeOuterClass.BulletType getBulletType() {
      protocol.BulletTypeOuterClass.BulletType result = protocol.BulletTypeOuterClass.BulletType.forNumber(bulletType_);
      return result == null ? protocol.BulletTypeOuterClass.BulletType.UNRECOGNIZED : result;
    }

    public static final int BET_FIELD_NUMBER = 4;
    private double bet_ = 0D;
    /**
     * <code>double bet = 4;</code>
     * @return The bet.
     */
    @java.lang.Override
    public double getBet() {
      return bet_;
    }

    public static final int DEAD_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<protocol.HitAckOuterClass.HitAck.Fish> dead_;
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    @java.lang.Override
    public java.util.List<protocol.HitAckOuterClass.HitAck.Fish> getDeadList() {
      return dead_;
    }
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends protocol.HitAckOuterClass.HitAck.FishOrBuilder> 
        getDeadOrBuilderList() {
      return dead_;
    }
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    @java.lang.Override
    public int getDeadCount() {
      return dead_.size();
    }
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    @java.lang.Override
    public protocol.HitAckOuterClass.HitAck.Fish getDead(int index) {
      return dead_.get(index);
    }
    /**
     * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
     */
    @java.lang.Override
    public protocol.HitAckOuterClass.HitAck.FishOrBuilder getDeadOrBuilder(
        int index) {
      return dead_.get(index);
    }

    public static final int REMAIN_FIELD_NUMBER = 6;
    private double remain_ = 0D;
    /**
     * <code>double remain = 6;</code>
     * @return The remain.
     */
    @java.lang.Override
    public double getRemain() {
      return remain_;
    }

    public static final int JACKPOT_FIELD_NUMBER = 8;
    private protocol.HitAckOuterClass.HitAck.Jackpot jackpot_;
    /**
     * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
     * @return Whether the jackpot field is set.
     */
    @java.lang.Override
    public boolean hasJackpot() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
     * @return The jackpot.
     */
    @java.lang.Override
    public protocol.HitAckOuterClass.HitAck.Jackpot getJackpot() {
      return jackpot_ == null ? protocol.HitAckOuterClass.HitAck.Jackpot.getDefaultInstance() : jackpot_;
    }
    /**
     * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
     */
    @java.lang.Override
    public protocol.HitAckOuterClass.HitAck.JackpotOrBuilder getJackpotOrBuilder() {
      return jackpot_ == null ? protocol.HitAckOuterClass.HitAck.Jackpot.getDefaultInstance() : jackpot_;
    }

    public static final int BONUS_FIELD_NUMBER = 9;
    private double bonus_ = 0D;
    /**
     * <code>double bonus = 9;</code>
     * @return The bonus.
     */
    @java.lang.Override
    public double getBonus() {
      return bonus_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seat_ != 0) {
        output.writeUInt32(1, seat_);
      }
      if (bulletId_ != 0) {
        output.writeUInt32(2, bulletId_);
      }
      if (bulletType_ != protocol.BulletTypeOuterClass.BulletType.NORMAL.getNumber()) {
        output.writeEnum(3, bulletType_);
      }
      if (java.lang.Double.doubleToRawLongBits(bet_) != 0) {
        output.writeDouble(4, bet_);
      }
      for (int i = 0; i < dead_.size(); i++) {
        output.writeMessage(5, dead_.get(i));
      }
      if (java.lang.Double.doubleToRawLongBits(remain_) != 0) {
        output.writeDouble(6, remain_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(8, getJackpot());
      }
      if (java.lang.Double.doubleToRawLongBits(bonus_) != 0) {
        output.writeDouble(9, bonus_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, seat_);
      }
      if (bulletId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, bulletId_);
      }
      if (bulletType_ != protocol.BulletTypeOuterClass.BulletType.NORMAL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, bulletType_);
      }
      if (java.lang.Double.doubleToRawLongBits(bet_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, bet_);
      }
      for (int i = 0; i < dead_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, dead_.get(i));
      }
      if (java.lang.Double.doubleToRawLongBits(remain_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, remain_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getJackpot());
      }
      if (java.lang.Double.doubleToRawLongBits(bonus_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, bonus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.HitAckOuterClass.HitAck)) {
        return super.equals(obj);
      }
      protocol.HitAckOuterClass.HitAck other = (protocol.HitAckOuterClass.HitAck) obj;

      if (getSeat()
          != other.getSeat()) return false;
      if (getBulletId()
          != other.getBulletId()) return false;
      if (bulletType_ != other.bulletType_) return false;
      if (java.lang.Double.doubleToLongBits(getBet())
          != java.lang.Double.doubleToLongBits(
              other.getBet())) return false;
      if (!getDeadList()
          .equals(other.getDeadList())) return false;
      if (java.lang.Double.doubleToLongBits(getRemain())
          != java.lang.Double.doubleToLongBits(
              other.getRemain())) return false;
      if (hasJackpot() != other.hasJackpot()) return false;
      if (hasJackpot()) {
        if (!getJackpot()
            .equals(other.getJackpot())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getBonus())
          != java.lang.Double.doubleToLongBits(
              other.getBonus())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEAT_FIELD_NUMBER;
      hash = (53 * hash) + getSeat();
      hash = (37 * hash) + BULLETID_FIELD_NUMBER;
      hash = (53 * hash) + getBulletId();
      hash = (37 * hash) + BULLETTYPE_FIELD_NUMBER;
      hash = (53 * hash) + bulletType_;
      hash = (37 * hash) + BET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBet()));
      if (getDeadCount() > 0) {
        hash = (37 * hash) + DEAD_FIELD_NUMBER;
        hash = (53 * hash) + getDeadList().hashCode();
      }
      hash = (37 * hash) + REMAIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRemain()));
      if (hasJackpot()) {
        hash = (37 * hash) + JACKPOT_FIELD_NUMBER;
        hash = (53 * hash) + getJackpot().hashCode();
      }
      hash = (37 * hash) + BONUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBonus()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.HitAckOuterClass.HitAck parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static protocol.HitAckOuterClass.HitAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static protocol.HitAckOuterClass.HitAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static protocol.HitAckOuterClass.HitAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.HitAckOuterClass.HitAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.HitAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.HitAck)
        protocol.HitAckOuterClass.HitAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.HitAckOuterClass.internal_static_protocol_HitAck_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.HitAckOuterClass.internal_static_protocol_HitAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.HitAckOuterClass.HitAck.class, protocol.HitAckOuterClass.HitAck.Builder.class);
      }

      // Construct using protocol.HitAckOuterClass.HitAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          internalGetDeadFieldBuilder();
          internalGetJackpotFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        seat_ = 0;
        bulletId_ = 0;
        bulletType_ = 0;
        bet_ = 0D;
        if (deadBuilder_ == null) {
          dead_ = java.util.Collections.emptyList();
        } else {
          dead_ = null;
          deadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        remain_ = 0D;
        jackpot_ = null;
        if (jackpotBuilder_ != null) {
          jackpotBuilder_.dispose();
          jackpotBuilder_ = null;
        }
        bonus_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.HitAckOuterClass.internal_static_protocol_HitAck_descriptor;
      }

      @java.lang.Override
      public protocol.HitAckOuterClass.HitAck getDefaultInstanceForType() {
        return protocol.HitAckOuterClass.HitAck.getDefaultInstance();
      }

      @java.lang.Override
      public protocol.HitAckOuterClass.HitAck build() {
        protocol.HitAckOuterClass.HitAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protocol.HitAckOuterClass.HitAck buildPartial() {
        protocol.HitAckOuterClass.HitAck result = new protocol.HitAckOuterClass.HitAck(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(protocol.HitAckOuterClass.HitAck result) {
        if (deadBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            dead_ = java.util.Collections.unmodifiableList(dead_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.dead_ = dead_;
        } else {
          result.dead_ = deadBuilder_.build();
        }
      }

      private void buildPartial0(protocol.HitAckOuterClass.HitAck result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.seat_ = seat_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.bulletId_ = bulletId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.bulletType_ = bulletType_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.bet_ = bet_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.remain_ = remain_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.jackpot_ = jackpotBuilder_ == null
              ? jackpot_
              : jackpotBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.bonus_ = bonus_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.HitAckOuterClass.HitAck) {
          return mergeFrom((protocol.HitAckOuterClass.HitAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.HitAckOuterClass.HitAck other) {
        if (other == protocol.HitAckOuterClass.HitAck.getDefaultInstance()) return this;
        if (other.getSeat() != 0) {
          setSeat(other.getSeat());
        }
        if (other.getBulletId() != 0) {
          setBulletId(other.getBulletId());
        }
        if (other.bulletType_ != 0) {
          setBulletTypeValue(other.getBulletTypeValue());
        }
        if (java.lang.Double.doubleToRawLongBits(other.getBet()) != 0) {
          setBet(other.getBet());
        }
        if (deadBuilder_ == null) {
          if (!other.dead_.isEmpty()) {
            if (dead_.isEmpty()) {
              dead_ = other.dead_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDeadIsMutable();
              dead_.addAll(other.dead_);
            }
            onChanged();
          }
        } else {
          if (!other.dead_.isEmpty()) {
            if (deadBuilder_.isEmpty()) {
              deadBuilder_.dispose();
              deadBuilder_ = null;
              dead_ = other.dead_;
              bitField0_ = (bitField0_ & ~0x00000010);
              deadBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetDeadFieldBuilder() : null;
            } else {
              deadBuilder_.addAllMessages(other.dead_);
            }
          }
        }
        if (java.lang.Double.doubleToRawLongBits(other.getRemain()) != 0) {
          setRemain(other.getRemain());
        }
        if (other.hasJackpot()) {
          mergeJackpot(other.getJackpot());
        }
        if (java.lang.Double.doubleToRawLongBits(other.getBonus()) != 0) {
          setBonus(other.getBonus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                seat_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                bulletId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                bulletType_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 33: {
                bet_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 42: {
                protocol.HitAckOuterClass.HitAck.Fish m =
                    input.readMessage(
                        protocol.HitAckOuterClass.HitAck.Fish.parser(),
                        extensionRegistry);
                if (deadBuilder_ == null) {
                  ensureDeadIsMutable();
                  dead_.add(m);
                } else {
                  deadBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 49: {
                remain_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 66: {
                input.readMessage(
                    internalGetJackpotFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 66
              case 73: {
                bonus_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 73
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int seat_ ;
      /**
       * <code>uint32 seat = 1;</code>
       * @return The seat.
       */
      @java.lang.Override
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>uint32 seat = 1;</code>
       * @param value The seat to set.
       * @return This builder for chaining.
       */
      public Builder setSeat(int value) {

        seat_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 seat = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seat_ = 0;
        onChanged();
        return this;
      }

      private int bulletId_ ;
      /**
       * <code>uint32 bulletId = 2;</code>
       * @return The bulletId.
       */
      @java.lang.Override
      public int getBulletId() {
        return bulletId_;
      }
      /**
       * <code>uint32 bulletId = 2;</code>
       * @param value The bulletId to set.
       * @return This builder for chaining.
       */
      public Builder setBulletId(int value) {

        bulletId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 bulletId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBulletId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bulletId_ = 0;
        onChanged();
        return this;
      }

      private int bulletType_ = 0;
      /**
       * <code>.protocol.BulletType bulletType = 3;</code>
       * @return The enum numeric value on the wire for bulletType.
       */
      @java.lang.Override public int getBulletTypeValue() {
        return bulletType_;
      }
      /**
       * <code>.protocol.BulletType bulletType = 3;</code>
       * @param value The enum numeric value on the wire for bulletType to set.
       * @return This builder for chaining.
       */
      public Builder setBulletTypeValue(int value) {
        bulletType_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.BulletType bulletType = 3;</code>
       * @return The bulletType.
       */
      @java.lang.Override
      public protocol.BulletTypeOuterClass.BulletType getBulletType() {
        protocol.BulletTypeOuterClass.BulletType result = protocol.BulletTypeOuterClass.BulletType.forNumber(bulletType_);
        return result == null ? protocol.BulletTypeOuterClass.BulletType.UNRECOGNIZED : result;
      }
      /**
       * <code>.protocol.BulletType bulletType = 3;</code>
       * @param value The bulletType to set.
       * @return This builder for chaining.
       */
      public Builder setBulletType(protocol.BulletTypeOuterClass.BulletType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        bulletType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.BulletType bulletType = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBulletType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bulletType_ = 0;
        onChanged();
        return this;
      }

      private double bet_ ;
      /**
       * <code>double bet = 4;</code>
       * @return The bet.
       */
      @java.lang.Override
      public double getBet() {
        return bet_;
      }
      /**
       * <code>double bet = 4;</code>
       * @param value The bet to set.
       * @return This builder for chaining.
       */
      public Builder setBet(double value) {

        bet_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double bet = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBet() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bet_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<protocol.HitAckOuterClass.HitAck.Fish> dead_ =
        java.util.Collections.emptyList();
      private void ensureDeadIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          dead_ = new java.util.ArrayList<protocol.HitAckOuterClass.HitAck.Fish>(dead_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol.HitAckOuterClass.HitAck.Fish, protocol.HitAckOuterClass.HitAck.Fish.Builder, protocol.HitAckOuterClass.HitAck.FishOrBuilder> deadBuilder_;

      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public java.util.List<protocol.HitAckOuterClass.HitAck.Fish> getDeadList() {
        if (deadBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dead_);
        } else {
          return deadBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public int getDeadCount() {
        if (deadBuilder_ == null) {
          return dead_.size();
        } else {
          return deadBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public protocol.HitAckOuterClass.HitAck.Fish getDead(int index) {
        if (deadBuilder_ == null) {
          return dead_.get(index);
        } else {
          return deadBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder setDead(
          int index, protocol.HitAckOuterClass.HitAck.Fish value) {
        if (deadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeadIsMutable();
          dead_.set(index, value);
          onChanged();
        } else {
          deadBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder setDead(
          int index, protocol.HitAckOuterClass.HitAck.Fish.Builder builderForValue) {
        if (deadBuilder_ == null) {
          ensureDeadIsMutable();
          dead_.set(index, builderForValue.build());
          onChanged();
        } else {
          deadBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder addDead(protocol.HitAckOuterClass.HitAck.Fish value) {
        if (deadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeadIsMutable();
          dead_.add(value);
          onChanged();
        } else {
          deadBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder addDead(
          int index, protocol.HitAckOuterClass.HitAck.Fish value) {
        if (deadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeadIsMutable();
          dead_.add(index, value);
          onChanged();
        } else {
          deadBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder addDead(
          protocol.HitAckOuterClass.HitAck.Fish.Builder builderForValue) {
        if (deadBuilder_ == null) {
          ensureDeadIsMutable();
          dead_.add(builderForValue.build());
          onChanged();
        } else {
          deadBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder addDead(
          int index, protocol.HitAckOuterClass.HitAck.Fish.Builder builderForValue) {
        if (deadBuilder_ == null) {
          ensureDeadIsMutable();
          dead_.add(index, builderForValue.build());
          onChanged();
        } else {
          deadBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder addAllDead(
          java.lang.Iterable<? extends protocol.HitAckOuterClass.HitAck.Fish> values) {
        if (deadBuilder_ == null) {
          ensureDeadIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dead_);
          onChanged();
        } else {
          deadBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder clearDead() {
        if (deadBuilder_ == null) {
          dead_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          deadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public Builder removeDead(int index) {
        if (deadBuilder_ == null) {
          ensureDeadIsMutable();
          dead_.remove(index);
          onChanged();
        } else {
          deadBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public protocol.HitAckOuterClass.HitAck.Fish.Builder getDeadBuilder(
          int index) {
        return internalGetDeadFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public protocol.HitAckOuterClass.HitAck.FishOrBuilder getDeadOrBuilder(
          int index) {
        if (deadBuilder_ == null) {
          return dead_.get(index);  } else {
          return deadBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public java.util.List<? extends protocol.HitAckOuterClass.HitAck.FishOrBuilder> 
           getDeadOrBuilderList() {
        if (deadBuilder_ != null) {
          return deadBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dead_);
        }
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public protocol.HitAckOuterClass.HitAck.Fish.Builder addDeadBuilder() {
        return internalGetDeadFieldBuilder().addBuilder(
            protocol.HitAckOuterClass.HitAck.Fish.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public protocol.HitAckOuterClass.HitAck.Fish.Builder addDeadBuilder(
          int index) {
        return internalGetDeadFieldBuilder().addBuilder(
            index, protocol.HitAckOuterClass.HitAck.Fish.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.HitAck.Fish dead = 5;</code>
       */
      public java.util.List<protocol.HitAckOuterClass.HitAck.Fish.Builder> 
           getDeadBuilderList() {
        return internalGetDeadFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol.HitAckOuterClass.HitAck.Fish, protocol.HitAckOuterClass.HitAck.Fish.Builder, protocol.HitAckOuterClass.HitAck.FishOrBuilder> 
          internalGetDeadFieldBuilder() {
        if (deadBuilder_ == null) {
          deadBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol.HitAckOuterClass.HitAck.Fish, protocol.HitAckOuterClass.HitAck.Fish.Builder, protocol.HitAckOuterClass.HitAck.FishOrBuilder>(
                  dead_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          dead_ = null;
        }
        return deadBuilder_;
      }

      private double remain_ ;
      /**
       * <code>double remain = 6;</code>
       * @return The remain.
       */
      @java.lang.Override
      public double getRemain() {
        return remain_;
      }
      /**
       * <code>double remain = 6;</code>
       * @param value The remain to set.
       * @return This builder for chaining.
       */
      public Builder setRemain(double value) {

        remain_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>double remain = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000020);
        remain_ = 0D;
        onChanged();
        return this;
      }

      private protocol.HitAckOuterClass.HitAck.Jackpot jackpot_;
      private com.google.protobuf.SingleFieldBuilder<
          protocol.HitAckOuterClass.HitAck.Jackpot, protocol.HitAckOuterClass.HitAck.Jackpot.Builder, protocol.HitAckOuterClass.HitAck.JackpotOrBuilder> jackpotBuilder_;
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       * @return Whether the jackpot field is set.
       */
      public boolean hasJackpot() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       * @return The jackpot.
       */
      public protocol.HitAckOuterClass.HitAck.Jackpot getJackpot() {
        if (jackpotBuilder_ == null) {
          return jackpot_ == null ? protocol.HitAckOuterClass.HitAck.Jackpot.getDefaultInstance() : jackpot_;
        } else {
          return jackpotBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       */
      public Builder setJackpot(protocol.HitAckOuterClass.HitAck.Jackpot value) {
        if (jackpotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jackpot_ = value;
        } else {
          jackpotBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       */
      public Builder setJackpot(
          protocol.HitAckOuterClass.HitAck.Jackpot.Builder builderForValue) {
        if (jackpotBuilder_ == null) {
          jackpot_ = builderForValue.build();
        } else {
          jackpotBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       */
      public Builder mergeJackpot(protocol.HitAckOuterClass.HitAck.Jackpot value) {
        if (jackpotBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            jackpot_ != null &&
            jackpot_ != protocol.HitAckOuterClass.HitAck.Jackpot.getDefaultInstance()) {
            getJackpotBuilder().mergeFrom(value);
          } else {
            jackpot_ = value;
          }
        } else {
          jackpotBuilder_.mergeFrom(value);
        }
        if (jackpot_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       */
      public Builder clearJackpot() {
        bitField0_ = (bitField0_ & ~0x00000040);
        jackpot_ = null;
        if (jackpotBuilder_ != null) {
          jackpotBuilder_.dispose();
          jackpotBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       */
      public protocol.HitAckOuterClass.HitAck.Jackpot.Builder getJackpotBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return internalGetJackpotFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       */
      public protocol.HitAckOuterClass.HitAck.JackpotOrBuilder getJackpotOrBuilder() {
        if (jackpotBuilder_ != null) {
          return jackpotBuilder_.getMessageOrBuilder();
        } else {
          return jackpot_ == null ?
              protocol.HitAckOuterClass.HitAck.Jackpot.getDefaultInstance() : jackpot_;
        }
      }
      /**
       * <code>.protocol.HitAck.Jackpot jackpot = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol.HitAckOuterClass.HitAck.Jackpot, protocol.HitAckOuterClass.HitAck.Jackpot.Builder, protocol.HitAckOuterClass.HitAck.JackpotOrBuilder> 
          internalGetJackpotFieldBuilder() {
        if (jackpotBuilder_ == null) {
          jackpotBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol.HitAckOuterClass.HitAck.Jackpot, protocol.HitAckOuterClass.HitAck.Jackpot.Builder, protocol.HitAckOuterClass.HitAck.JackpotOrBuilder>(
                  getJackpot(),
                  getParentForChildren(),
                  isClean());
          jackpot_ = null;
        }
        return jackpotBuilder_;
      }

      private double bonus_ ;
      /**
       * <code>double bonus = 9;</code>
       * @return The bonus.
       */
      @java.lang.Override
      public double getBonus() {
        return bonus_;
      }
      /**
       * <code>double bonus = 9;</code>
       * @param value The bonus to set.
       * @return This builder for chaining.
       */
      public Builder setBonus(double value) {

        bonus_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>double bonus = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBonus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        bonus_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.HitAck)
    }

    // @@protoc_insertion_point(class_scope:protocol.HitAck)
    private static final protocol.HitAckOuterClass.HitAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.HitAckOuterClass.HitAck();
    }

    public static protocol.HitAckOuterClass.HitAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HitAck>
        PARSER = new com.google.protobuf.AbstractParser<HitAck>() {
      @java.lang.Override
      public HitAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HitAck> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HitAck> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protocol.HitAckOuterClass.HitAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_HitAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_HitAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_HitAck_Fish_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_HitAck_Fish_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_HitAck_Jackpot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_HitAck_Jackpot_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014HitAck.proto\022\010protocol\032\020BulletType.pro" +
      "to\"\316\002\n\006HitAck\022\014\n\004seat\030\001 \001(\r\022\020\n\010bulletId\030" +
      "\002 \001(\r\022(\n\nbulletType\030\003 \001(\0162\024.protocol.Bul" +
      "letType\022\013\n\003bet\030\004 \001(\001\022#\n\004dead\030\005 \003(\0132\025.pro" +
      "tocol.HitAck.Fish\022\016\n\006remain\030\006 \001(\001\022)\n\007jac" +
      "kpot\030\010 \001(\0132\030.protocol.HitAck.Jackpot\022\r\n\005" +
      "bonus\030\t \001(\001\032 \n\004Fish\022\n\n\002id\030\001 \001(\r\022\014\n\004coin\030" +
      "\002 \001(\001\032C\n\007Jackpot\022*\n\004type\030\001 \001(\0162\034.protoco" +
      "l.HitAck.JackpotType\022\014\n\004coin\030\002 \001(\001\"\027\n\013Ja" +
      "ckpotType\022\010\n\004None\020\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.BulletTypeOuterClass.getDescriptor(),
        });
    internal_static_protocol_HitAck_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_HitAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_HitAck_descriptor,
        new java.lang.String[] { "Seat", "BulletId", "BulletType", "Bet", "Dead", "Remain", "Jackpot", "Bonus", });
    internal_static_protocol_HitAck_Fish_descriptor =
      internal_static_protocol_HitAck_descriptor.getNestedTypes().get(0);
    internal_static_protocol_HitAck_Fish_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_HitAck_Fish_descriptor,
        new java.lang.String[] { "Id", "Coin", });
    internal_static_protocol_HitAck_Jackpot_descriptor =
      internal_static_protocol_HitAck_descriptor.getNestedTypes().get(1);
    internal_static_protocol_HitAck_Jackpot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_HitAck_Jackpot_descriptor,
        new java.lang.String[] { "Type", "Coin", });
    descriptor.resolveAllFeaturesImmutable();
    protocol.BulletTypeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
